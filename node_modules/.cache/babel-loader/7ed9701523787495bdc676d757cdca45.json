{"remainingRequest":"C:\\Users\\sherr\\OneDrive\\Documents\\GitHub\\WAD2LMAOO\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\sherr\\OneDrive\\Documents\\GitHub\\WAD2LMAOO\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!C:\\Users\\sherr\\OneDrive\\Documents\\GitHub\\WAD2LMAOO\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\sherr\\OneDrive\\Documents\\GitHub\\WAD2LMAOO\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\sherr\\OneDrive\\Documents\\GitHub\\WAD2LMAOO\\src\\components\\Home.vue?vue&type=template&id=8dc7cce2&scoped=true","dependencies":[{"path":"C:\\Users\\sherr\\OneDrive\\Documents\\GitHub\\WAD2LMAOO\\src\\components\\Home.vue","mtime":1635783000702},{"path":"C:\\Users\\sherr\\OneDrive\\Documents\\GitHub\\WAD2LMAOO\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1634026581038},{"path":"C:\\Users\\sherr\\OneDrive\\Documents\\GitHub\\WAD2LMAOO\\node_modules\\babel-loader\\lib\\index.js","mtime":1634026579157},{"path":"C:\\Users\\sherr\\OneDrive\\Documents\\GitHub\\WAD2LMAOO\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1634563115437},{"path":"C:\\Users\\sherr\\OneDrive\\Documents\\GitHub\\WAD2LMAOO\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1634026581038},{"path":"C:\\Users\\sherr\\OneDrive\\Documents\\GitHub\\WAD2LMAOO\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1634563115595}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\sherr\\OneDrive\\Documents\\GitHub\\WAD2LMAOO\\src\\components\\Home.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n<div>\r\n<div class = \"page\" v-if = \"usertype !== 'na'\">\r\n<Navbar/>\r\n<!-- <div class = \"pageContent\"> -->\r\n    <!-- {{usertype}} -->\r\n    <div>\r\n    <!-- <div v-if=\"usertype ==='employer'\" class = \"employer-projects\"> -->\r\n        <!-- <EmployerProject :projectName =\"'Proj1'\" :projectAssignees = \"'Ruby Kurosawa'\" :projectAssigned = \"'14/7/2021'\"\r\n        :projectDue =\"'14/11/2021'\" :projectStatus = \"'incomplete'\"  :projectReward = \"'500'\"/>\r\n        <EmployerProject :projectName =\"'Proj2'\" :projectAssignees = \"'Karin'\" :projectAssigned = \"'11/6/2021'\"\r\n        :projectDue =\"'12/10/2021'\" :projectStatus = \"'incomplete'\"  :projectReward = \"'460'\"/>\r\n        <EmployerProject :projectName =\"'Proj2'\" :projectAssignees = \"'Karin'\" :projectAssigned = \"'11/6/2021'\"\r\n        :projectDue =\"'12/10/2021'\" :projectStatus = \"'incomplete'\"  :projectReward = \"'460'\"/>\r\n        <EmployerProject :projectName =\"'Proj2'\" :projectAssignees = \"'Karin'\" :projectAssigned = \"'11/6/2021'\"\r\n        :projectDue =\"'12/10/2021'\" :projectStatus = \"'incomplete'\"  :projectReward = \"'460'\"/>\r\n        <EmployerProject :projectName =\"'Proj2'\" :projectAssignees = \"'Karin'\" :projectAssigned = \"'11/6/2021'\"\r\n        :projectDue =\"'12/10/2021'\" :projectStatus = \"'incomplete'\"  :projectReward = \"'460'\"/>\r\n        <AddItem :itemType=\"'project'\"/> -->\r\n\r\n<!-- Modal -->\r\n<!-- <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h2 class=\"modal-title\" id=\"exampleModalLabel\" align=\"center\">Add new project</h2>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <table class=\"table\">\r\n          <tr>\r\n            <th scope = \"row\">Project Name</th>\r\n            <td><input type = \"text\" class = \"form-control\" /></td>\r\n          </tr>\r\n          <tr>\r\n            <th scope = \"row\">Rewarded points:</th>\r\n            <td><input type = \"number\" class = \"form-control\" /></td>\r\n          </tr>\r\n          <tr>\r\n            <th scope = \"row\">Project due:</th>\r\n            <td><input type = \"date\" class = \"form-control\" /></td>\r\n          </tr>\r\n          <tr>\r\n            <th scope = \"row\">Add assignees:</th>\r\n            <td><input type = \"text\" class = \"form-control\" /></td>\r\n          </tr>\r\n        </table>\r\n        <button class = \"btn new-project-btn\" data-dismiss=\"modal\">Assign project</button>\r\n      </div>\r\n    \r\n\r\n    </div>\r\n    <h5>Click anywhere to cancel</h5>\r\n  </div>\r\n</div> -->\r\n        <div id=\"bg\" class=\"row m-4\">\r\n            <div class=\"container\">\r\n                <div class=\"row justify-content-between\">\r\n                    <h1 class=\"col-xl-4\">{{currentMonth()}} Summary</h1>\r\n                    <div class=\"card task-info col-2\">\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">Total No. of Task(s)</h5>\r\n                            <h4 class=\"card-text pt-2\">59</h4>\r\n                        </div>\r\n                    </div>   \r\n                    <div class=\"card task-info col-2\">\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">No. of Completed Task(s)</h5>\r\n                            <h4 class=\"card-text pt-2\">25</h4>\r\n                        </div>\r\n                    </div>  \r\n                    <div class=\"card task-info col-2\">\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">No. of Incomplete Task(s)</h5>\r\n                            <h4 class=\"card-text pt-2\">32</h4>\r\n                        </div>\r\n                    </div>  \r\n                </div>\r\n                <div class=\"row p-2 my-4 bg-white border border-dark\">\r\n                    <div class=\"row mx-0 p-0 justify-content-between\">\r\n                        <highcharts :options=\"taskStatus_employer\" class=\"chart col border border-dark\"></highcharts>\r\n                        <highcharts :options=\"revenue\" class=\"chart col border border-dark\"></highcharts>\r\n                    </div>\r\n                    <div class=\"row mx-0 p-0 justify-content-between\">\r\n                        <highcharts :options=\"taskDist_employer\" class=\"chart col-5 border border-dark\"></highcharts>\r\n                        <div class=\"task_list col border border-dark\">\r\n                            <h5 class=\"border-bottom border-dark py-3\">Project Task List</h5><input type=\"text\" placeholder=\"Filter by task/status/person\" class=\"w-100\" v-model=\"filter\" />\r\n                            <table class=\"table table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">Task Status <button class=\"button\" @click=\"sortTable('status', direction)\"><img src=\"../assets/sort.png\"></button></th>\r\n                                        <th scope=\"col\">Task Name <button class=\"button\" @click=\"sortTable('task', direction)\"><img src=\"../assets/sort.png\"></button></th>\r\n                                        <th scope=\"col\">Project Name <button class=\"button\" @click=\"sortTable('proj', direction)\"><img src=\"../assets/sort.png\"></button></th>\r\n                                        <th scope=\"col\">Person In-charge <button class=\"button\" @click=\"sortTable('person', direction)\"><img src=\"../assets/sort.png\"></button></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr v-for=\"(row, index) in filteredRows\" :key=\"`task-${index}`\">\r\n                                        <td>{{ row.status }}</td>\r\n                                        <td>{{ row.task }}</td>\r\n                                        <td>{{ row.proj }}</td>\r\n                                        <td>{{ row.person }}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n  </div>\r\n  <!-- <div v-else>\r\n        <div id=\"bg\">\r\n            <div class=\"container\">\r\n                <div class=\"row justify-content-between\">\r\n                    <h1 class=\"col-xl-4\">{{currentMonth()}} Summary</h1>\r\n                    <div class=\"card task-info col-2\">\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">Total No. of Task(s)</h5>\r\n                            <h4 class=\"card-text pt-2\">10</h4>\r\n                        </div>\r\n                    </div>   \r\n                    <div class=\"card task-info col-2\">\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">No. of Completed Task(s)</h5>\r\n                            <h4 class=\"card-text pt-2\">2</h4>\r\n                        </div>\r\n                    </div>  \r\n                    <div class=\"card task-info col-2\">\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">No. of Incomplete Task(s)</h5>\r\n                            <h4 class=\"card-text pt-2\">8</h4>\r\n                        </div>\r\n                    </div>  \r\n                </div>\r\n                <div class=\"row p-2 my-4 bg-white border border-dark\">\r\n                    <div class=\"row mx-0 p-0 justify-content-between\">\r\n                        <highcharts :options=\"taskStatus\" class=\"chart col border border-dark\"></highcharts>\r\n                        <highcharts :options=\"rewardHist\" class=\"chart col border border-dark\"></highcharts>\r\n                    </div>\r\n                    <div class=\"row mx-0 p-0 justify-content-between\">\r\n                        <highcharts :options=\"taskDist\" class=\"chart col-5 border border-dark\"></highcharts>\r\n                        <div class=\"task_list col border border-dark\">\r\n                            <h5 class=\"border-bottom border-dark py-3\">Project Task List</h5>\r\n                            <table class=\"table table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">Task Status</th>\r\n                                        <th scope=\"col\">Task Name</th>\r\n                                        <th scope=\"col\">Project Name</th>\r\n                                        <th scope=\"col\">Deadline</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr v-for=\"(row, index) in filteredRows\" :key=\"`task-${index}`\">\r\n                                        <td>{{ row.status }}</td>\r\n                                        <td>{{ row.task }}</td>\r\n                                        <td>{{ row.proj }}</td>\r\n                                        <td>{{ row.deadline }}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n  </div> -->\r\n</div>\r\n<div v-else>\r\n<h3>You are not logged in.</h3>\r\n</div>\r\n</div>\r\n\r\n<!-- </div> -->\r\n    \r\n</template>\r\n<script>\r\n// import { onBeforeMount } from '@vue/runtime-core'\r\nimport {Chart} from 'highcharts-vue'\r\nimport Navbar from \"./Navbar.vue\"\r\nimport mixin from \"../mixin\"\r\n// import EmployerProject from \"./EmployerProject.vue\"\r\n// import AddItem from \"./AddItem.vue\"\r\n\r\nexport default {\r\n    name:\"Home\",\r\n    mixins:[mixin],\r\n      components: {\r\n    Navbar,\r\n    // EmployerProject,\r\n    // AddItem,\r\n    highcharts: Chart \r\n  },\r\n//   props:[\"usertype\"],\r\n  beforeMount(){\r\n       this.getUserType()\r\n        if(this.usertype === \"na\"){\r\n            this.$router.push(\"/authenticate\")\r\n        }\r\n  },\r\n    methods: {\r\n        currentMonth() {\r\n            const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n            const current = new Date();\r\n            const month = months[current.getMonth()];\r\n            return month;\r\n        },\r\n        sortTable(key,direction) {\r\n            this.sort = `${key} > ${direction}`\r\n            if (direction === 'asc') {\r\n                this.rows.sort((a, b) => a[key] > b[key] ? 1: -1)\r\n                this.direction = 'desc';\r\n            } else {\r\n                this.rows.sort((a, b) => a[key] < b[key] ? 1: -1)\r\n                this.direction = 'asc';\r\n            }\r\n        }\r\n    },\r\n\r\n  \r\n  data(){\r\n    return{\r\n      arr:[],\r\n            taskStatus: {\r\n                chart: {\r\n                    type: 'pie'\r\n                },\r\n                title: {\r\n                    text: 'Task Status'\r\n                },\r\n                plotOptions: {\r\n                    pie: {\r\n                        innerSize: '70%',\r\n                        allowPointSelect: true,\r\n                        cursor: 'pointer',\r\n                        dataLabels: {\r\n                            enabled: true,\r\n                            format: '<b>{point.name}</b>: {y}'\r\n                        }\r\n                    }\r\n                },\r\n                series: [{\r\n                    name: 'Count',\r\n                    data: [{\r\n                        name: 'Completed Task(s)',\r\n                        y: 2,\r\n                        color: \"#1b3e6e\"\r\n                    }, {\r\n                        name: 'Incomplete Task(s)',\r\n                        y: 8,\r\n                        color: \"#6c9fe6\"\r\n                    }]\r\n                }]\r\n            },\r\n            rewardHist: {\r\n                chart: {\r\n                    type: 'line'\r\n                },\r\n                title: {\r\n                    text: 'Points Reward History'\r\n                },\r\n                xAxis: {\r\n                    categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep']\r\n                },\r\n                series: [{\r\n                    name: \"Points Per Month\",\r\n                    data: [20, 10, 15, 7, 10, 16, 10, 14, 8]\r\n                }],\r\n            },\r\n            taskDist: {\r\n                chart: {\r\n                    type: 'column'\r\n                },\r\n                title: {\r\n                    text: 'Task Distribution'\r\n                },\r\n                xAxis: {\r\n                    categories: ['Project 1', 'Project 2', 'Project 3', 'Project 4']\r\n                },\r\n                yAxis: {\r\n                    min: 0,\r\n                    title: {\r\n                        text: 'Total No. of Tasks'\r\n                    },\r\n                    stackLabels: {\r\n                        enabled: true,\r\n                        \r\n                    }\r\n                },\r\n                tooltip: {\r\n                    headerFormat: '<b>{point.x}</b><br/>',\r\n                    pointFormat: '{series.name}: {point.y}'\r\n                },\r\n                plotOptions: {\r\n                    column: {\r\n                        stacking: 'normal',\r\n                    }\r\n                },\r\n                series: [{\r\n                    name: 'Completed',\r\n                    data: [0, 1, 1, 0],\r\n                    color: \"#1b3e6e\"\r\n                }, {\r\n                    name: 'Incomplete',\r\n                    data: [3, 3, 1, 1],\r\n                    color: \"#6c9fe6\"\r\n                }]\r\n            },\r\n            taskStatus_employer: {\r\n                chart: {\r\n                    type: 'pie'\r\n                },\r\n                title: {\r\n                    text: 'Task Status'\r\n                },\r\n                plotOptions: {\r\n                    pie: {\r\n                        innerSize: '70%',\r\n                        allowPointSelect: true,\r\n                        cursor: 'pointer',\r\n                        dataLabels: {\r\n                            enabled: true,\r\n                            format: '<b>{point.name}</b>: {y}'\r\n                        }\r\n                    }\r\n                },\r\n                series: [{\r\n                    name: 'Count',\r\n                    data: [{\r\n                        name: 'Completed Task(s)',\r\n                        y: 25,\r\n                        color: \"#1b3e6e\"\r\n                    }, {\r\n                        name: 'Incomplete Task(s)',\r\n                        y: 32,\r\n                        color: \"#6c9fe6\"\r\n                    }]\r\n                }]\r\n            },\r\n            taskDist_employer: {\r\n                chart: {\r\n                    type: 'column'\r\n                },\r\n                title: {\r\n                    text: 'Task Distribution'\r\n                },\r\n                xAxis: {\r\n                    categories: ['Project 1', 'Project 2', 'Project 3', 'Project 4', 'Project 5', 'Project 6']\r\n                },\r\n                yAxis: {\r\n                    min: 0,\r\n                    title: {\r\n                        text: 'Total No. of Tasks'\r\n                    },\r\n                    stackLabels: {\r\n                        enabled: true,\r\n                        \r\n                    }\r\n                },\r\n                tooltip: {\r\n                    headerFormat: '<b>{point.x}</b><br/>',\r\n                    pointFormat: '{series.name}: {point.y}'\r\n                },\r\n                plotOptions: {\r\n                    column: {\r\n                        stacking: 'normal',\r\n                    }\r\n                },\r\n                series: [{\r\n                    name: 'Completed',\r\n                    data: [10, 4, 2, 7, 2,0],\r\n                    color: \"#1b3e6e\"\r\n                }, {\r\n                    name: 'Incomplete',\r\n                    data: [3, 5, 10, 2, 2, 10],\r\n                    color: \"#6c9fe6\"\r\n                }]\r\n            },\r\n            revenue: {\r\n                chart: {\r\n                    type: 'line'\r\n                },\r\n                title: {\r\n                    text: 'Revenue Growth'\r\n                },\r\n                xAxis: {\r\n                    categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep']\r\n                },\r\n                series: [{\r\n                    name: \"Profits Per Month\",\r\n                    data: [20000, 40000, 50000, 70000, 100000, 160000, 100000, 99000, 110000]\r\n                }],\r\n            },\r\n            filter: '',\r\n            sort: '',\r\n            direction: 'asc',\r\n            columns: ['task','proj','status','person'],\r\n            rows: [\r\n                {task:'Complete UI', proj: 'Project 5', status: 'Completed', person: 'James', deadline: '28/11/2021'},\r\n                {task:'Prototype', proj: 'Project 1', status: 'New', person: 'James', deadline: '28/11/2021'},\r\n                {task:'Draft Proposal', proj: 'Project 2', status: 'In Progress', person: 'James', deadline: '28/11/2021'},\r\n                {task:'Setup Database', proj: 'Project 2', status: 'In Progress', person: 'John', deadline: '20/11/2021'},\r\n                {task:'Draft Proposal', proj: 'Project 1', status: 'New', person: 'Kelly', deadline: '2/11/2021'},\r\n                {task:'UI Testing', proj: 'Project 1',status: 'Completed', person: 'Den', deadline: '10/11/2021'}\r\n            ]\r\n    }\r\n  },\r\n  computed: {\r\n        filteredRows() {\r\n                return this.rows.filter(row => {\r\n                const task = row.task.toString().toLowerCase();\r\n                const status = row.status.toLowerCase();\r\n                const person = row.person.toLowerCase();\r\n                const searchTerm = this.filter.toLowerCase();\r\n\r\n                return task.includes(searchTerm) || status.includes(searchTerm) || person.includes(searchTerm);\r\n            });\r\n        }\r\n  }\r\n\r\n}\r\n</script>\r\n<style>\r\n\r\n.page{\r\n    min-height: 100vh;\r\n    width:100%;\r\n    /* display: flex; */\r\n}\r\n.pageContent{\r\n  min-height:100vh;\r\n  /* margin-top:60px; */\r\n  background:rgba(248, 248, 248, 1)\r\n;\r\n  padding-top:60px;\r\n  padding-bottom:60px;\r\n}\r\n</style>\r\n<style scoped>\r\n.employer-projects{\r\n      display: flex;\r\n    flex-wrap: wrap;\r\n}\r\n\r\n\r\n.new-project-btn{\r\nbackground: linear-gradient(0deg, #504DFF, #504DFF), rgba(78, 74, 255, 0.61);\r\nborder-radius: 5px;\r\ncolor: white;\r\n}\r\n.modal-title{\r\n  margin: auto;\r\n}\r\n.modal-dialog h5{\r\n  color:white;\r\n}\r\n\r\n/* employee homepage aka dashboard */\r\n\r\n    .container {\r\n        margin-top: 80px;\r\n    }\r\n\r\n    h1 {\r\n        text-align: left;\r\n        padding-top: 25px;\r\n    }\r\n\r\n    .task-info {\r\n        height: 100px;\r\n        width: 270px;\r\n        background: linear-gradient(57.11deg, #6D9DF8 -4.9%, #6461FF 101.23%, rgba(109, 157, 248, 0.64) 101.24%, rgba(109, 157, 248, 0) 101.24%);        color:white;\r\n    }\r\n\r\n    .card-body {\r\n        padding: 10px 0px;\r\n    }\r\n\r\n    .chart {\r\n        padding: 0px;\r\n        margin: 5px;\r\n    }\r\n\r\n    .task_list {\r\n        margin: 5px;\r\n        height: 400px;\r\n    }\r\n\r\n    img {\r\n        width: 20px;\r\n    }\r\n\r\n    .button {\r\n        border: none;\r\n        background-color: transparent;\r\n    }\r\n\r\n</style>"],"sourceRoot":""}]}