{"remainingRequest":"/Users/demonicaoi/Documents/GitHub/WAD2LMAOO/node_modules/babel-loader/lib/index.js!/Users/demonicaoi/Documents/GitHub/WAD2LMAOO/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/demonicaoi/Documents/GitHub/WAD2LMAOO/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/demonicaoi/Documents/GitHub/WAD2LMAOO/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/demonicaoi/Documents/GitHub/WAD2LMAOO/src/components/Home.vue?vue&type=template&id=8dc7cce2&scoped=true","dependencies":[{"path":"/Users/demonicaoi/Documents/GitHub/WAD2LMAOO/src/components/Home.vue","mtime":1636720731237},{"path":"/Users/demonicaoi/Documents/GitHub/WAD2LMAOO/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/demonicaoi/Documents/GitHub/WAD2LMAOO/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/demonicaoi/Documents/GitHub/WAD2LMAOO/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1634824862473},{"path":"/Users/demonicaoi/Documents/GitHub/WAD2LMAOO/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/demonicaoi/Documents/GitHub/WAD2LMAOO/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":1634824862470}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/demonicaoi/Documents/GitHub/WAD2LMAOO/src/components/Home.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<!-- <div> -->\n<div class = \"page\" v-if = \"usertype !== 'na'\">\n    <div class=\"container\">\n        <Navbar :pageType = \"'Home'\"/>\n    </div>\n\n<!-- <div class = \"pageContent\"> -->\n    <!-- {{usertype}} -->\n    <div class=\"base container-fluid\" style=\"background: #FFFAFA\">\n    <!-- <div v-if=\"usertype ==='employer'\" class = \"employer-projects\"> -->\n        <!-- <EmployerProject :projectName =\"'Proj1'\" :projectAssignees = \"'Ruby Kurosawa'\" :projectAssigned = \"'14/7/2021'\"\n        :projectDue =\"'14/11/2021'\" :projectStatus = \"'incomplete'\"  :projectReward = \"'500'\"/>\n        <EmployerProject :projectName =\"'Proj2'\" :projectAssignees = \"'Karin'\" :projectAssigned = \"'11/6/2021'\"\n        :projectDue =\"'12/10/2021'\" :projectStatus = \"'incomplete'\"  :projectReward = \"'460'\"/>\n        <EmployerProject :projectName =\"'Proj2'\" :projectAssignees = \"'Karin'\" :projectAssigned = \"'11/6/2021'\"\n        :projectDue =\"'12/10/2021'\" :projectStatus = \"'incomplete'\"  :projectReward = \"'460'\"/>\n        <EmployerProject :projectName =\"'Proj2'\" :projectAssignees = \"'Karin'\" :projectAssigned = \"'11/6/2021'\"\n        :projectDue =\"'12/10/2021'\" :projectStatus = \"'incomplete'\"  :projectReward = \"'460'\"/>\n        <EmployerProject :projectName =\"'Proj2'\" :projectAssignees = \"'Karin'\" :projectAssigned = \"'11/6/2021'\"\n        :projectDue =\"'12/10/2021'\" :projectStatus = \"'incomplete'\"  :projectReward = \"'460'\"/>\n        <AddItem :itemType=\"'project'\"/> -->\n\n<!-- Modal -->\n<!-- <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"exampleModalLabel\" align=\"center\">Add new project</h2>\n      </div>\n      <div class=\"modal-body\">\n        <table class=\"table\">\n          <tr>\n            <th scope = \"row\">Project Name</th>\n            <td><input type = \"text\" class = \"form-control\" /></td>\n          </tr>\n          <tr>\n            <th scope = \"row\">Rewarded points:</th>\n            <td><input type = \"number\" class = \"form-control\" /></td>\n          </tr>\n          <tr>\n            <th scope = \"row\">Project due:</th>\n            <td><input type = \"date\" class = \"form-control\" /></td>\n          </tr>\n          <tr>\n            <th scope = \"row\">Add assignees:</th>\n            <td><input type = \"text\" class = \"form-control\" /></td>\n          </tr>\n        </table>\n        <button class = \"btn new-project-btn\" data-dismiss=\"modal\">Assign project</button>\n      </div>\n    \n\n    </div>\n    <h5>Click anywhere to cancel</h5>\n  </div>\n</div> -->\n        <div id=\"bg\" class=\"row m-4\">\n            <div class=\"container-fluid\">\n                <div class=\"row\">\n                    <div>\n                        <h1 class=\"heading\">{{currentMonth()}} Summary</h1>\n                    </div>\n                    <div class=\"row justify-content-between\" id=\"taskno\">\n                        <div class=\" task-info g-2 col-12 col-xl-4 col-md-4 col-sm-12\">\n                            <div class=\"card\">   \n                                <div class=\"card-body\">\n                                    <h5 class=\"card-title\">Total No. of Task(s)</h5>\n                                    <h4 class=\"card-text pt-2\">{{num_task}}</h4>\n                                </div>\n                            </div>\n                        </div>   \n                        <div class=\" task-info g-2 col-12 col-xl-4 col-md-4 col-sm-12\">\n                            <div class=\"card\">   \n                                <div class=\"card-body\">\n                                    <h5 class=\"card-title\">No. of Completed Task(s)</h5>\n                                    <h4 class=\"card-text pt-2\">{{completed_tasks}}</h4>\n                                </div>\n                            </div>\n                        </div>  \n                        <div class=\" task-info g-2 col-12 col-xl-4 col-md-4 col-sm-12\">\n                            <div class=\"card\">   \n                                <div class=\"card-body\">\n                                    <h5 class=\"card-title\">No. of Incomplete Task(s)</h5>\n                                    <h4 class=\"card-text pt-2\">{{incomplete_tasks}}</h4>\n                                </div>\n                            </div>\n                        </div>  \n                    </div>\n                    \n                </div>\n                <br>\n\n                <div class=\"container-fluid\">\n                    <!-- <div class=\"row p-2 my-4 border border-dark\" id=\"bgcolor\"> -->\n                        <div class=\"container-fluid\">\n                            <div class=\"row justify-content-between\">\n                                <div class=\"col-md-6\" width=\"100%\">\n                                    <b><highcharts :options=\"taskStatus_employer\" class=\"chart col border border-dark\"></highcharts></b>\n                                </div>\n                                <div class=\"col-md-6\" width=\"100%\">\n                                    <b><highcharts :options=\"revenue\" class=\"chart col border border-dark\"></highcharts></b>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"container-fluid\">\n                            <div class=\"row justify-content-between\">\n                                <div class=\"col-md-6 mt-3\">\n                                    <b><highcharts :options=\"taskDist_employer\" class=\"chart border border-dark\" width=\"100%\"></highcharts></b>\n                                </div>\n                                <div class=\"col-md-6 mt-3\">\n                                    <div class=\"task_list border border-dark bg-white\">\n                                        <h6 class=\"pt-2 \" style=\"font-size: 18px\"><b>Project Task List</b></h6><input type=\"text\" placeholder=\"Filter by task/status/person\" class=\"w-100\" v-model=\"filter\" />\n                                        <table class=\"table table-hover mt-2 table-striped\">\n                                            <thead>\n                                                <tr>\n                                                    <th style=\"background: #b6cefb\" scope=\"col\" class=\"text-center\">Task Status <button class=\"button\" @click=\"sortTable('task_status', direction)\"><img src=\"../assets/sort.png\"></button></th>\n                                                    <th style=\"background: #b6cefb\" scope=\"col\" class=\"text-center\">Task Name <button class=\"button\" @click=\"sortTable('task_name', direction)\"><img src=\"../assets/sort.png\"></button></th>\n                                                    <th style=\"background: #b6cefb\" scope=\"col\" class=\"text-center\">Project Name <button class=\"button\" @click=\"sortTable('project_id', direction)\"><img src=\"../assets/sort.png\"></button></th>\n                                                    <th style=\"background: #b6cefb\" scope=\"col\" class=\"text-start\">Person In-charge <button class=\"button\" @click=\"sortTable('user_id', direction)\"><img src=\"../assets/sort.png\"></button></th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <tr v-for=\"(row, index) in filteredRows\" :key=\"`task-${index}`\">\n                                                    <td class=\"text-center text-wrap\">{{ row.task_status }}</td>\n                                                    <td class=\"text-center text-wrap\">{{ row.task_name }}</td>\n                                                    <td class=\"text-center text-wrap\">{{ row.project_name }}</td>\n                                                    <td class=\"text-center text-wrap\">{{ row.user_name }}</td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                                    \n                            </div>\n                        </div>\n                        \n                    <!-- </div> -->\n                </div>\n                \n            </div>\n        </div>\n  </div>\n\n</div>\n\n<div v-else>\n<h3>You are not logged in.</h3>\n</div>\n<!-- </div> -->\n    \n</template>\n<script>\n// import { onBeforeMount } from '@vue/runtime-core'\nimport {Chart} from 'highcharts-vue'\nimport Navbar from \"./Navbar.vue\"\nimport mixin from \"../mixin\"\nimport firebase from \"firebase/compat\"\n// import EmployerProject from \"./EmployerProject.vue\"\n// import AddItem from \"./AddItem.vue\"\n\nexport default {\n    name:\"Home\",\n    mixins:[mixin],\n      components: {\n    Navbar,\n    // EmployerProject,\n    // AddItem,\n    highcharts: Chart \n  },\n//   props:[\"usertype\"],\n  beforeMount(){\n       this.usertype = this.getUserType();\n        if(this.usertype === \"na\"){\n            this.$router.push(\"/authenticate\")\n        }\n  },\n    methods: {\n        currentMonth() {\n            const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n            const current = new Date();\n            const month = months[current.getMonth()];\n            return month;\n        },\n        sortTable(key,direction) {\n            this.sort = `${key} > ${direction}`\n            if (direction === 'asc') {\n                this.tasks.sort((a, b) => a[key] > b[key] ? 1: -1)\n                this.direction = 'desc';\n            } else {\n                this.tasks.sort((a, b) => a[key] < b[key] ? 1: -1)\n                this.direction = 'asc';\n            }\n        },\n        \n    },\n  data(){\n    return{\n        tasks: [],\n        completed_tasks: 0,\n        incomplete_tasks: 0,\n        num_task: 0,\n        type: \"\",\n        y:0,\n      arr:[],\n            taskStatus: {\n                chart: {\n                    type: 'pie'\n                },\n                title: {\n                    text: 'Task Status'\n                },\n                plotOptions: {\n                    pie: {\n                        innerSize: '70%',\n                        allowPointSelect: true,\n                        cursor: 'pointer',\n                        dataLabels: {\n                            enabled: true,\n                            format: '<b>{point.name}</b>: {y}'\n                        }\n                    }\n                },\n                series: [{\n                    name: 'Count',\n                    data: [{\n                        name: 'Completed Task(s)',\n                        y: 2,\n                        color: \"#1b3e6e\"\n                    }, {\n                        name: 'Incomplete Task(s)',\n                        y: 8,\n                        color: \"#6c9fe6\"\n                    }]\n                }]\n            },\n            rewardHist: {\n                chart: {\n                    type: 'line'\n                },\n                title: {\n                    text: 'Points Reward History'\n                },\n                xAxis: {\n                    categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep']\n                },\n                series: [{\n                    name: \"Points Per Month\",\n                    data: [20, 10, 15, 7, 10, 16, 10, 14, 8]\n                }],\n            },\n            taskDist: {\n                chart: {\n                    type: 'column'\n                },\n                title: {\n                    text: 'Task Distribution'\n                },\n                xAxis: {\n                    categories: ['Project 1', 'Project 2', 'Project 3', 'Project 4']\n                },\n                yAxis: {\n                    min: 0,\n                    title: {\n                        text: 'Total No. of Tasks'\n                    },\n                    stackLabels: {\n                        enabled: true,\n                        \n                    }\n                },\n                tooltip: {\n                    headerFormat: '<b>{point.x}</b><br/>',\n                    pointFormat: '{series.name}: {point.y}'\n                },\n                plotOptions: {\n                    column: {\n                        stacking: 'normal',\n                    }\n                },\n                series: [{\n                    name: 'Completed',\n                    data: [0, 1, 1, 0],\n                    color: \"#1b3e6e\"\n                }, {\n                    name: 'Incomplete',\n                    data: [3, 3, 1, 1],\n                    color: \"#6c9fe6\"\n                }]\n            },\n            taskStatus_employer: {\n                chart: {\n                    type: 'pie'\n                },\n                title: {\n                    text: 'Task Status'\n                },\n                plotOptions: {\n                    pie: {\n                        innerSize: '70%',\n                        allowPointSelect: true,\n                        cursor: 'pointer',\n                        dataLabels: {\n                            enabled: true,\n                            format: '<b>{point.name}</b>: {y}'\n                        }\n                    }\n                },\n                series: [{\n                    name: 'Count',\n                    data: [{\n                        name: 'Completed Task(s)',\n                        y: 2,\n                        color: \"#1b3e6e\"\n                    }, {\n                        name: 'Incomplete Task(s)',\n                        y: 2,\n                        color: \"#6c9fe6\"\n                    }]\n                }]\n            },\n            taskDist_employer: {\n                chart: {\n                    type: 'column'\n                },\n                title: {\n                    text: 'Task Distribution'\n                },\n                xAxis: {\n                    categories: []\n                },\n                yAxis: {\n                    min: 0,\n                    title: {\n                        text: 'Total No. of Tasks'\n                    },\n                    stackLabels: {\n                        enabled: true,\n                        \n                    }\n                },\n                tooltip: {\n                    headerFormat: '<b>{point.x}</b><br/>',\n                    pointFormat: '{series.name}: {point.y}'\n                },\n                plotOptions: {\n                    column: {\n                        stacking: 'normal',\n                    }\n                },\n                series: [{\n                    name: 'Completed',\n                    data: [],\n                    color: \"#1b3e6e\"\n                }, {\n                    name: 'Incomplete',\n                    data: [],\n                    color: \"#6c9fe6\"\n                }]\n            },\n            revenue: {\n                chart: {\n                    type: 'line'\n                },\n                title: {\n                    text: 'Revenue Growth'\n                },\n                xAxis: {\n                    categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct']\n                },\n                series: [{\n                    name: \"Profits Per Month\",\n                    data: [30000, 60000, 50000, 70000, 100000, 160000, 120000, 99000, 110000, 115000]\n                }],\n            },\n            filter: '',\n            sort: '',\n            direction: 'asc',\n            columns: ['task','proj','status','person'],\n            categories: [],\n            completed: [],\n            incomplete: []\n            // rows: [\n            //     {task:'Complete UI', proj: 'Project 5', status: 'Completed', person: 'James', deadline: '28/11/2021'},\n            //     {task:'Prototype', proj: 'Project 1', status: 'New', person: 'James', deadline: '28/11/2021'},\n            //     {task:'Draft Proposal', proj: 'Project 2', status: 'In Progress', person: 'James', deadline: '28/11/2021'},\n            //     {task:'Setup Database', proj: 'Project 2', status: 'In Progress', person: 'John', deadline: '20/11/2021'},\n            //     {task:'Draft Proposal', proj: 'Project 1', status: 'New', person: 'Kelly', deadline: '2/11/2021'},\n            //     {task:'UI Testing', proj: 'Project 1',status: 'Completed', person: 'Den', deadline: '10/11/2021'}\n            // ]\n    }\n  },\n  computed: {\n        filteredRows() {\n                return this.tasks.filter(row => {\n                const task_name = row.task_name.toString().toLowerCase();\n                const task_status = row.task_status.toLowerCase();\n                // const user_id = row.user_id;\n                const searchTerm = this.filter.toLowerCase();\n\n                return task_name.includes(searchTerm) || task_status.includes(searchTerm);\n            });\n        },\n  },\n  created() {\n      firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                firebase.database().ref('users/' + user.uid + '/user_type' ).on('value', (snapshot) => {\n                    this.type = snapshot.val();  \n                }); \n                \n                firebase.database().ref('tasks/').on('value', (snapshot) => {\n                    console.log(\"type is \" + this.type)\n                    // this.incomplete_tasks = 0\n                    // this.completed_tasks = 0\n                    // this.num_task = 0\n                    // this.tasks = []\n                    if (this.type == \"employer\") {\n                        \n                        // this.num_task = snapshot.val().length;\n                        snapshot.forEach((childSnapshot) => {\n                            var task = childSnapshot.val();\n                            this.tasks.push(task);\n                            if (task.task_status == \"Completed\") {\n                                this.completed_tasks += 1;\n                                this.num_task += 1;\n                            } else {\n                                this.incomplete_tasks += 1;\n                                this.num_task += 1\n                            }\n                        });\n                        // console.log(\"OVER HERE\");\n                        // console.log(this.taskStatus_employer.series[0].data[0].y);\n                        // console.log(this.taskStatus_employer.series[0].data[1].y);\n                        this.taskStatus_employer.series[0].data[0].y = this.completed_tasks;\n                        this.taskStatus_employer.series[0].data[1].y = this.incomplete_tasks;\n                        console.log(\"OVER HERE\");\n                        console.log(this.taskStatus_employer.series[0].data[0].y);\n                        console.log(this.taskStatus_employer.series[0].data[1].y);\n\n                        firebase.database().ref('projects/').on('value', (snapshot) => {\n                            snapshot.forEach((childSnapshot) => {\n                                var name = childSnapshot.val().project_name\n                                console.log(name)\n                                this.categories.push(name)\n                            })\n                            console.log(\"CATEGORIES\")\n                            console.log(this.categories)\n                            this.taskDist_employer.xAxis.categories = this.categories\n                            console.log(\"xAXIS\")\n                            console.log(this.taskDist_employer.xAxis.categories)\n                        \n                        console.log(\"DISTCHARTHERE2\");\n                        firebase.database().ref('tasks/').on('value', (snapshot) => {\n                            for (var proj of this.categories) {\n                                var num_c = 0;\n                                var num_inc = 0;\n                                snapshot.forEach((childSnapshot) => {\n                                    var task = childSnapshot.val();\n                                    console.log(proj, task.project_name);\n                                    if (proj == task.project_name) {\n                                        if(task.task_status == \"Completed\") {\n                                            num_c += 1;\n                                        } else {\n                                            num_inc += 1;\n                                        }\n                                    }\n                                });\n                                console.log(\"DISTCHARTHERE1\");\n                                console.log(num_c,num_inc);\n                                this.completed.push(num_c);\n                                this.incomplete.push(num_inc);\n                            }\n                            console.log(this.completed);\n                            this.taskDist_employer.series[0].data = this.completed;\n                            this.taskDist_employer.series[1].data = this.incomplete;\n                        });\n                    });\n                    } else {\n                        // this.tasks = []\n                        snapshot.forEach((childSnapshot) => {\n                            var task = childSnapshot.val();\n                            \n                            if (task.user_id == user.uid) {\n                                if (!this.categories.includes(task.project_name)) {\n                                    this.categories.push(task.project_name);\n                                }\n                                this.tasks.push(task);\n                                this.num_task += 1;\n                                if (task.task_status == \"Completed\") {\n                                    this.completed_tasks += 1;\n                                } else {\n                                    this.incomplete_tasks += 1;\n                                }\n                            } \n                        })\n                        console.log(\"OVER HERE\");\n                        console.log(this.taskStatus_employer.series[0].data[0].y);\n                        this.taskStatus_employer.series[0].data[0].y = this.completed_tasks;\n                        this.taskStatus_employer.series[0].data[1].y = this.incomplete_tasks;\n                        console.log(\"OVER HERE\");\n                        console.log(this.taskStatus_employer.series[0].data[0].y);\n                        console.log(this.taskStatus_employer.series[0].data[1].y);\n\n                        firebase.database().ref('tasks/').on('value', (snapshot) => {\n                            for (var proj of this.categories) {\n                                var num_c = 0;\n                                var num_inc = 0;\n                                snapshot.forEach((childSnapshot) => {\n                                    var task = childSnapshot.val()\n                                    if (proj == task.project_name) {\n                                        if(task.task_status == \"Completed\") {\n                                            num_c += 1\n                                        } else {\n                                            num_inc += 1;\n                                        }\n                                    }\n                                })\n                                console.log(num_c,num_inc)\n                                this.completed.push(num_c);\n                                this.incomplete.push(num_inc);\n                            }\n                            console.log(this.completed)\n                            this.taskDist_employer.series[0].data = this.completed;\n                            this.taskDist_employer.series[1].data = this.incomplete;\n                        });\n                    }\n                });\n\n                // firebase.database().ref('projects/').on('value', (snapshot) => {\n                //     snapshot.forEach((childSnapshot) => {\n                //         var name = childSnapshot.val().project_name\n                //         this.categories.push(name)\n                //     })\n                //     this.taskDist_employer.xAxis = this.categories\n                //     console.log(this.taskDist_employer.xAxis)\n                // });   \n            }\n        })\n    }\n\n}\n</script>\n<style>\n.base {\n    margin-top: 60px;\n}\n\n.heading{\n    box-shadow: 0px 5px 0px rgba(83, 90, 249, 0.81);\n    width:max-content;\n    margin: 20px auto 30px auto;\n} \n/* #bgcolor{\n    background: rgb(255, 220, 156);\n} */\n\n.highcharts-title{\n    font-family: Arial, Helvetica, sans-serif\n}\n.table{\n    table-layout:fixed;\n    width:100%;\n}\n\ntd {\n    /* word-wrap:break-word; */\n    overflow: hidden;\n}\n.task_list{\n    overflow-y:scroll;\n}\n.page{\n    min-height: 100vh;\n    width:100%;\n    /* display: flex; */\n}\n.pageContent{\n  min-height:100vh;\n  /* margin-top:60px; */\n  background:rgba(248, 248, 248, 1);\n  padding-top:60px;\n  padding-bottom:60px;\n}\n</style>\n<style scoped>\n.employer-projects{\n      display: flex;\n    flex-wrap: wrap;\n}\n.new-project-btn{\nbackground: linear-gradient(0deg, #504DFF, #504DFF), rgba(78, 74, 255, 0.61);\nborder-radius: 5px;\ncolor: white;\n}\n.modal-title{\n  margin: auto;\n}\n.modal-dialog h5{\n  color:white;\n}\n/* employee homepage aka dashboard */\n    .container {\n        margin:auto;\n    }\n    h1 {\n        text-align: left;\n        /* padding-top: 25px; */\n    }\n\n    #taskno{\n        /* width:100% */\n        margin-left:25px;\n        /* margin-right: auto; */\n    }\n\n    .task-info {\n        height: 90px;\n        color: white\n        /* width: 270px;\n        background: linear-gradient(57.11deg, #6D9DF8 -4.9%, #6461FF 101.23%, rgba(109, 157, 248, 0.64) 101.24%, rgba(109, 157, 248, 0) 101.24%);        color:white; */\n    }\n\n    .card{\n        width: 90%;\n        background: black;\n    }\n\n    .card-body {\n        padding: 10px 10px;\n    }\n\n    .chart {\n        padding: 0px;\n        margin: 5px;\n        border-radius: 2%;        \n\n    }\n    \n    .task_list {\n        margin: 5px;\n        height: 400px;\n    }\n    img {\n        width: 20px;\n    }\n    .button {\n        border: none;\n        background-color: transparent;\n    }\n</style>"],"sourceRoot":""}]}