{"remainingRequest":"/Users/shintabek/Documents/GitHub/WAD2LMAOO/node_modules/babel-loader/lib/index.js!/Users/shintabek/Documents/GitHub/WAD2LMAOO/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/shintabek/Documents/GitHub/WAD2LMAOO/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/shintabek/Documents/GitHub/WAD2LMAOO/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/shintabek/Documents/GitHub/WAD2LMAOO/src/components/EmployeeToDoList.vue?vue&type=template&id=1b223bbc&scoped=true","dependencies":[{"path":"/Users/shintabek/Documents/GitHub/WAD2LMAOO/src/components/EmployeeToDoList.vue","mtime":1636618048886},{"path":"/Users/shintabek/Documents/GitHub/WAD2LMAOO/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shintabek/Documents/GitHub/WAD2LMAOO/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/shintabek/Documents/GitHub/WAD2LMAOO/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1634786752534},{"path":"/Users/shintabek/Documents/GitHub/WAD2LMAOO/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shintabek/Documents/GitHub/WAD2LMAOO/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":1634786752533}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBjcmVhdGVFbGVtZW50Vk5vZGUgYXMgX2NyZWF0ZUVsZW1lbnRWTm9kZSwgY3JlYXRlQ29tbWVudFZOb2RlIGFzIF9jcmVhdGVDb21tZW50Vk5vZGUsIHJlbmRlckxpc3QgYXMgX3JlbmRlckxpc3QsIEZyYWdtZW50IGFzIF9GcmFnbWVudCwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUVsZW1lbnRCbG9jayBhcyBfY3JlYXRlRWxlbWVudEJsb2NrLCB0b0Rpc3BsYXlTdHJpbmcgYXMgX3RvRGlzcGxheVN0cmluZywgdk1vZGVsQ2hlY2tib3ggYXMgX3ZNb2RlbENoZWNrYm94LCB3aXRoRGlyZWN0aXZlcyBhcyBfd2l0aERpcmVjdGl2ZXMsIHB1c2hTY29wZUlkIGFzIF9wdXNoU2NvcGVJZCwgcG9wU2NvcGVJZCBhcyBfcG9wU2NvcGVJZCB9IGZyb20gInZ1ZSI7Cgp2YXIgX3dpdGhTY29wZUlkID0gZnVuY3Rpb24gX3dpdGhTY29wZUlkKG4pIHsKICByZXR1cm4gX3B1c2hTY29wZUlkKCJkYXRhLXYtMWIyMjNiYmMiKSwgbiA9IG4oKSwgX3BvcFNjb3BlSWQoKSwgbjsKfTsKCnZhciBfaG9pc3RlZF8xID0gewogIGNsYXNzOiAicGFnZSIKfTsKdmFyIF9ob2lzdGVkXzIgPSB7CiAgY2xhc3M6ICJjb250YWluZXIiCn07Cgp2YXIgX2hvaXN0ZWRfMyA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoZnVuY3Rpb24gKCkgewogIHJldHVybiAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaDEiLCB7CiAgICBzdHlsZTogewogICAgICAiY29sb3IiOiAiYmxhY2siCiAgICB9LAogICAgY2xhc3M6ICJtYi00IgogIH0sICJUby1kbyBsaXN0IiwgLTEKICAvKiBIT0lTVEVEICovCiAgKTsKfSk7Cgp2YXIgX2hvaXN0ZWRfNCA9IHsKICBjbGFzczogInRhYmxlIHRhYmxlLWJvcmRlcmVkIgp9OwoKdmFyIF9ob2lzdGVkXzUgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKGZ1bmN0aW9uICgpIHsKICByZXR1cm4gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoInRoZWFkIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJ0ciIsIG51bGwsIFsvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgidGgiLCB7CiAgICBzdHlsZTogewogICAgICAiYmFja2dyb3VuZCI6ICIjYjZjZWZiIgogICAgfSwKICAgIHNjb3BlOiAiY29sIgogIH0sICJUYXNrIE5hbWUiKSwgLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoInRoIiwgewogICAgc3R5bGU6IHsKICAgICAgImJhY2tncm91bmQiOiAiI2I2Y2VmYiIKICAgIH0sCiAgICBzY29wZTogImNvbCIKICB9LCAiVGFzayBEdWUiKSwgLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoInRoIiwgewogICAgc3R5bGU6IHsKICAgICAgImJhY2tncm91bmQiOiAiI2I2Y2VmYiIKICAgIH0sCiAgICBzY29wZTogImNvbCIKICB9LCAiQ29tcGxldGVkIildKV0sIC0xCiAgLyogSE9JU1RFRCAqLwogICk7Cn0pOwoKdmFyIF9ob2lzdGVkXzYgPSB7CiAgY2xhc3M6ICJ0YXNrLW5hbWUiCn07CnZhciBfaG9pc3RlZF83ID0gewogIGNsYXNzOiAidGFzay1kdWUtZGF0ZSIKfTsKdmFyIF9ob2lzdGVkXzggPSB7CiAgY2xhc3M6ICJzdGF0dXMiCn07CnZhciBfaG9pc3RlZF85ID0gWyJ2YWx1ZSJdOwp2YXIgX2hvaXN0ZWRfMTAgPSB7CiAga2V5OiAxLAogIGNsYXNzOiAiYnRuIGJ0bi1wcmltYXJ5IiwKICBkaXNhYmxlZDogIiIKfTsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICB2YXIgX2NvbXBvbmVudF9OYXZiYXIgPSBfcmVzb2x2ZUNvbXBvbmVudCgiTmF2YmFyIik7CgogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIF9ob2lzdGVkXzEsIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9OYXZiYXIpLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8yLCBbX2hvaXN0ZWRfMywgX2NyZWF0ZUNvbW1lbnRWTm9kZSgiIHt7Y29tcGxldGVkfX1cbiAgICAgICAgPGJyPlxuICAgICAgICB7e3Rhc2tzfX1cbiAgICAgICAgPGJyPlxuICAgICAgICB7e2luY29tcGxldGVUYXNrc319ICIpLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJ0YWJsZSIsIF9ob2lzdGVkXzQsIFtfaG9pc3RlZF81LCBfY3JlYXRlRWxlbWVudFZOb2RlKCJ0Ym9keSIsIG51bGwsIFsoX29wZW5CbG9jayh0cnVlKSwgX2NyZWF0ZUVsZW1lbnRCbG9jayhfRnJhZ21lbnQsIG51bGwsIF9yZW5kZXJMaXN0KCRkYXRhLnRhc2tzLCBmdW5jdGlvbiAocm93LCBpbmRleCkgewogICAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygidHIiLCB7CiAgICAgIGtleTogInRhc2stIi5jb25jYXQoaW5kZXgpCiAgICB9LCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgidGQiLCBfaG9pc3RlZF82LCBfdG9EaXNwbGF5U3RyaW5nKHJvdy50YXNrX25hbWUpLCAxCiAgICAvKiBURVhUICovCiAgICApLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJ0ZCIsIF9ob2lzdGVkXzcsIF90b0Rpc3BsYXlTdHJpbmcocm93LmR1ZV9kYXRlKSwgMQogICAgLyogVEVYVCAqLwogICAgKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgidGQiLCBfaG9pc3RlZF84LCBbX3dpdGhEaXJlY3RpdmVzKF9jcmVhdGVFbGVtZW50Vk5vZGUoImlucHV0IiwgewogICAgICB0eXBlOiAiY2hlY2tib3giLAogICAgICB2YWx1ZTogcm93LnRhc2tfaWQsCiAgICAgICJvblVwZGF0ZTptb2RlbFZhbHVlIjogX2NhY2hlWzBdIHx8IChfY2FjaGVbMF0gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgICAgcmV0dXJuICRkYXRhLmNvbXBsZXRlZCA9ICRldmVudDsKICAgICAgfSkKICAgIH0sIG51bGwsIDgKICAgIC8qIFBST1BTICovCiAgICAsIF9ob2lzdGVkXzkpLCBbW192TW9kZWxDaGVja2JveCwgJGRhdGEuY29tcGxldGVkXV0pXSldKTsKICB9KSwgMTI4CiAgLyogS0VZRURfRlJBR01FTlQgKi8KICApKV0pXSksICRkYXRhLmNvbXBsZXRlZC5sZW5ndGggIT09IDAgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJidXR0b24iLCB7CiAgICBrZXk6IDAsCiAgICBjbGFzczogImJ0biBidG4tcHJpbWFyeSIsCiAgICBvbkNsaWNrOiBfY2FjaGVbMV0gfHwgKF9jYWNoZVsxXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgcmV0dXJuICRvcHRpb25zLnN1Ym1pdCgpOwogICAgfSkKICB9LCAiU3VibWl0IikpIDogKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiYnV0dG9uIiwgX2hvaXN0ZWRfMTAsICJTdWJtaXQiKSldKV0pOwp9"},{"version":3,"sources":["/Users/shintabek/Documents/GitHub/WAD2LMAOO/src/components/EmployeeToDoList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div class = \"page\">\n    <Navbar/>\n    \n    <div class=  \"container\">\n        <h1 style=\"color: black\" class=\"mb-4\">To-do list</h1>\n        <!-- {{completed}}\n        <br>\n        {{tasks}}\n        <br>\n        {{incompleteTasks}} -->\n        <table class = \"table table-bordered\">\n            <thead>\n                <tr>\n                    <th style=\"background: #b6cefb;\" scope = \"col\">Task Name</th>\n                    <th style=\"background: #b6cefb;\" scope = \"col\">Task Due</th>\n                    <th style=\"background: #b6cefb;\" scope = \"col\">Completed</th>\n\n                </tr>\n                \n            </thead>\n\n            <tbody>\n                <tr v-for=\"(row, index) in tasks\" :key=\"`task-${index}`\">\n                    <td class = \"task-name\">{{ row.task_name }}</td>\n                    <td class=\"task-due-date\">{{ row.due_date }}</td>\n                    <td class = \"status\"><input type = \"checkbox\" v-bind:value = row.task_id  v-model = \"completed\"/></td>\n                </tr>\n            </tbody>\n        </table>\n        <button class = \"btn btn-primary\" v-if=\"completed.length !== 0\" @click=\"submit()\">Submit</button>\n          <button class = \"btn btn-primary\" v-else disabled >Submit</button>\n    </div>\n</div>\n\n</template>\n\n<script>\nimport Navbar from \"./Navbar.vue\"\nimport mixin from \"../mixin\"\nimport firebase from \"firebase/compat\"\nimport \"firebase/compat/auth\"\n\nexport default {\n    name:\"EmployeeToDo\",\n    mixins:[mixin],\n    components:{\n        Navbar\n    },\n    data(){\n        return {\n            tasks: [],\n            completed: []\n        }\n\n    },\n  beforeMount(){\n    //    console.log(\"why\"+this.usertype)\n  },\n   methods:{\n     submit(){\n         var num = 0;\n         \n         this.tasks = this.tasks.map(\n             task =>{\n                 if(this.completed.includes(task.task_id)){\n                     var ele = (task.task_id)-1;\n                     this.tasks.splice(num,1);\n                     var updates = {};\n                     updates['tasks/' + ele + '/task_status'] = \"Review\"\n                     firebase.database().ref().update(updates);\n\n                 }\n                 else{\n                     return task\n                 }\n                 num++\n             },\n         )\n             \n\n        \n        // .on('value', (snapshot) => {\n        // snapshot.forEach((childSnapshot) => {\n            // var task = childSnapshot.val();\n            // if (this.completed.includes(task.task_id)) {\n            //     task.task_status: \"review\"\n            // }\n        // });\n    // })\n    }\n\n},\n  created() {\n      firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                firebase.database().ref('tasks/').on('value', (snapshot) => {\n                    this.tasks = []\n                    snapshot.forEach((childSnapshot) => {\n                        var task = childSnapshot.val();\n                        if (task.user_id === user.uid) {\n                            if (task.task_status != \"Completed\" && task.task_status != \"Review\") {\n                                this.tasks.push(task);\n                            }\n                        } \n                    });\n                }); \n\n            } else {\n                this.user = null;\n            }\n        });  \n  }\n    \n}\n</script>\n<style scoped>\n.task-name{\n    width:60%;\n}\n.task-due-date{\n    width:40%;\n}\n .page{\n        min-height: 100vh;\n        width:100%;\n        background:rgba(248, 248, 248, 1);\n        /* display: flex; */\n    }\n.container{\n    margin-top: 80px;\n}\n.container h1{\n        box-shadow: 0px 5px 0px rgba(83, 90, 249, 0.81);\n        width:max-content;\n        margin: 20px auto;\n}\ntable th{\n    text-align: start;\n}\n</style>"],"sourceRoot":""}]}