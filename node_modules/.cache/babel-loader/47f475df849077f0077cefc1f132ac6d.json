{"remainingRequest":"C:\\Users\\veinn\\Documents\\GitHub\\WAD2LMAOO\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\veinn\\Documents\\GitHub\\WAD2LMAOO\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!C:\\Users\\veinn\\Documents\\GitHub\\WAD2LMAOO\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\veinn\\Documents\\GitHub\\WAD2LMAOO\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\veinn\\Documents\\GitHub\\WAD2LMAOO\\src\\components\\Home.vue?vue&type=template&id=8dc7cce2&scoped=true","dependencies":[{"path":"C:\\Users\\veinn\\Documents\\GitHub\\WAD2LMAOO\\src\\components\\Home.vue","mtime":1636544359597},{"path":"C:\\Users\\veinn\\Documents\\GitHub\\WAD2LMAOO\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636335936041},{"path":"C:\\Users\\veinn\\Documents\\GitHub\\WAD2LMAOO\\node_modules\\babel-loader\\lib\\index.js","mtime":1636335934724},{"path":"C:\\Users\\veinn\\Documents\\GitHub\\WAD2LMAOO\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1636335933958},{"path":"C:\\Users\\veinn\\Documents\\GitHub\\WAD2LMAOO\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636335936041},{"path":"C:\\Users\\veinn\\Documents\\GitHub\\WAD2LMAOO\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1636335933950}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\veinn\\Documents\\GitHub\\WAD2LMAOO\\src\\components\\Home.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n<!-- <div> -->\r\n<div class = \"page\" v-if = \"usertype !== 'na'\">\r\n\r\n        <Navbar/>\r\n\r\n<!-- <div class = \"pageContent\"> -->\r\n    <!-- {{usertype}} -->\r\n    <div class=\"base container-fluid\" style=\"background: white\">\r\n    <!-- <div v-if=\"usertype ==='employer'\" class = \"employer-projects\"> -->\r\n        <!-- <EmployerProject :projectName =\"'Proj1'\" :projectAssignees = \"'Ruby Kurosawa'\" :projectAssigned = \"'14/7/2021'\"\r\n        :projectDue =\"'14/11/2021'\" :projectStatus = \"'incomplete'\"  :projectReward = \"'500'\"/>\r\n        <EmployerProject :projectName =\"'Proj2'\" :projectAssignees = \"'Karin'\" :projectAssigned = \"'11/6/2021'\"\r\n        :projectDue =\"'12/10/2021'\" :projectStatus = \"'incomplete'\"  :projectReward = \"'460'\"/>\r\n        <EmployerProject :projectName =\"'Proj2'\" :projectAssignees = \"'Karin'\" :projectAssigned = \"'11/6/2021'\"\r\n        :projectDue =\"'12/10/2021'\" :projectStatus = \"'incomplete'\"  :projectReward = \"'460'\"/>\r\n        <EmployerProject :projectName =\"'Proj2'\" :projectAssignees = \"'Karin'\" :projectAssigned = \"'11/6/2021'\"\r\n        :projectDue =\"'12/10/2021'\" :projectStatus = \"'incomplete'\"  :projectReward = \"'460'\"/>\r\n        <EmployerProject :projectName =\"'Proj2'\" :projectAssignees = \"'Karin'\" :projectAssigned = \"'11/6/2021'\"\r\n        :projectDue =\"'12/10/2021'\" :projectStatus = \"'incomplete'\"  :projectReward = \"'460'\"/>\r\n        <AddItem :itemType=\"'project'\"/> -->\r\n\r\n<!-- Modal -->\r\n<!-- <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h2 class=\"modal-title\" id=\"exampleModalLabel\" align=\"center\">Add new project</h2>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <table class=\"table\">\r\n          <tr>\r\n            <th scope = \"row\">Project Name</th>\r\n            <td><input type = \"text\" class = \"form-control\" /></td>\r\n          </tr>\r\n          <tr>\r\n            <th scope = \"row\">Rewarded points:</th>\r\n            <td><input type = \"number\" class = \"form-control\" /></td>\r\n          </tr>\r\n          <tr>\r\n            <th scope = \"row\">Project due:</th>\r\n            <td><input type = \"date\" class = \"form-control\" /></td>\r\n          </tr>\r\n          <tr>\r\n            <th scope = \"row\">Add assignees:</th>\r\n            <td><input type = \"text\" class = \"form-control\" /></td>\r\n          </tr>\r\n        </table>\r\n        <button class = \"btn new-project-btn\" data-dismiss=\"modal\">Assign project</button>\r\n      </div>\r\n    \r\n\r\n    </div>\r\n    <h5>Click anywhere to cancel</h5>\r\n  </div>\r\n</div> -->\r\n        <div id=\"bg\" class=\"row m-4\">\r\n            <div class=\"container-fluid\">\r\n                <div class=\"row\">\r\n                    <div>\r\n                        <h1 class=\"col-xl-4\">{{currentMonth()}} Summary</h1>\r\n                    </div>\r\n                    <div class=\"row justify-content-between px-5\">\r\n                        <div class=\"card task-info g-2 mx-3 col-4 col-xl-4 col-md-4\">\r\n                            <div class=\"card-body\">\r\n                                <h5 class=\"card-title\">Total No. of Task(s)</h5>\r\n                                <h4 class=\"card-text pt-2\">{{num_task}}</h4>\r\n                            </div>\r\n                        </div>   \r\n                        <div class=\"card task-info g-2 mx-3 col-4 col-xl-4 col-md-4\">\r\n                            <div class=\"card-body\">\r\n                                <h5 class=\"card-title\">No. of Completed Task(s)</h5>\r\n                                <h4 class=\"card-text pt-2\">{{completed_tasks}}</h4>\r\n                            </div>\r\n                        </div>  \r\n                        <div class=\"card task-info g-2 mx-3 col-4 col-xl-4 col-md-4\">\r\n                            <div class=\"card-body\">\r\n                                <h5 class=\"card-title\">No. of Incomplete Task(s)</h5>\r\n                                <h4 class=\"card-text pt-2\">{{incomplete_tasks}}</h4>\r\n                            </div>\r\n                        </div>  \r\n                    </div>\r\n                    \r\n                </div>\r\n                <div class=\"container-fluid p-0\">\r\n                    <div class=\"row p-2 my-4 border border-dark\" id=\"bgcolor\">\r\n                        <div class=\"container-fluid\">\r\n                            <div class=\"row mx-0 p-0 justify-content-between\">\r\n                                <div class=\"col-md-6\" width=\"100%\">\r\n                                    <b><highcharts :options=\"taskStatus_employer\" class=\"chart col border border-dark\"></highcharts></b>\r\n                                </div>\r\n                                <div class=\"col-md-6\" width=\"100%\">\r\n                                    <b><highcharts :options=\"revenue\" class=\"chart col border border-dark\"></highcharts></b>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"container-fluid\">\r\n                            <div class=\"row mx-0 p-0 justify-content-between\">\r\n                                <div class=\"col-md-6\">\r\n                                    <b><highcharts :options=\"taskDist_employer\" class=\"chart border border-dark\" width=\"100%\"></highcharts></b>\r\n                                </div>\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"task_list border border-dark bg-white\">\r\n                                        <h6 class=\"pt-2 \" style=\"font-size: 18px\"><b>Project Task List</b></h6><input type=\"text\" placeholder=\"Filter by task/status/person\" class=\"w-100\" v-model=\"filter\" />\r\n                                        <table class=\"table table-hover mt-2 table-striped\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th style=\"background: #b6cefb\" scope=\"col\" class=\"text-center\">Task Status <button class=\"button\" @click=\"sortTable('task_status', direction)\"><img src=\"../assets/sort.png\"></button></th>\r\n                                                    <th style=\"background: #b6cefb\" scope=\"col\" class=\"text-center\">Task Name <button class=\"button\" @click=\"sortTable('task_name', direction)\"><img src=\"../assets/sort.png\"></button></th>\r\n                                                    <th style=\"background: #b6cefb\" scope=\"col\" class=\"text-center\">Project Name <button class=\"button\" @click=\"sortTable('project_id', direction)\"><img src=\"../assets/sort.png\"></button></th>\r\n                                                    <th style=\"background: #b6cefb\" scope=\"col\" class=\"text-start\">Person In-charge <button class=\"button\" @click=\"sortTable('user_id', direction)\"><img src=\"../assets/sort.png\"></button></th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                <tr v-for=\"(row, index) in filteredRows\" :key=\"`task-${index}`\">\r\n                                                    <td class=\"text-center\">{{ row.task_status }}</td>\r\n                                                    <td class=\"text-center\">{{ row.task_name }}</td>\r\n                                                    <td class=\"text-center\">{{ row.project_id }}</td>\r\n                                                    <td class=\"text-center\">{{ row.user_name }}</td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                                    \r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n  </div>\r\n\r\n</div>\r\n\r\n<div v-else>\r\n<h3>You are not logged in.</h3>\r\n</div>\r\n<!-- </div> -->\r\n    \r\n</template>\r\n<script>\r\n// import { onBeforeMount } from '@vue/runtime-core'\r\nimport {Chart} from 'highcharts-vue'\r\nimport Navbar from \"./Navbar.vue\"\r\nimport mixin from \"../mixin\"\r\nimport firebase from \"firebase/compat\"\r\n// import EmployerProject from \"./EmployerProject.vue\"\r\n// import AddItem from \"./AddItem.vue\"\r\n\r\nexport default {\r\n    name:\"Home\",\r\n    mixins:[mixin],\r\n      components: {\r\n    Navbar,\r\n    // EmployerProject,\r\n    // AddItem,\r\n    highcharts: Chart \r\n  },\r\n//   props:[\"usertype\"],\r\n  beforeMount(){\r\n       this.usertype = this.getUserType();\r\n        if(this.usertype === \"na\"){\r\n            this.$router.push(\"/authenticate\")\r\n        }\r\n  },\r\n    methods: {\r\n        currentMonth() {\r\n            const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n            const current = new Date();\r\n            const month = months[current.getMonth()];\r\n            return month;\r\n        },\r\n        sortTable(key,direction) {\r\n            this.sort = `${key} > ${direction}`\r\n            if (direction === 'asc') {\r\n                this.tasks.sort((a, b) => a[key] > b[key] ? 1: -1)\r\n                this.direction = 'desc';\r\n            } else {\r\n                this.tasks.sort((a, b) => a[key] < b[key] ? 1: -1)\r\n                this.direction = 'asc';\r\n            }\r\n        },\r\n        \r\n    },\r\n  data(){\r\n    return{\r\n        tasks: [],\r\n        completed_tasks: 0,\r\n        incomplete_tasks: 0,\r\n        num_task: 0,\r\n        type: \"\",\r\n      arr:[],\r\n            taskStatus: {\r\n                chart: {\r\n                    type: 'pie'\r\n                },\r\n                title: {\r\n                    text: 'Task Status'\r\n                },\r\n                plotOptions: {\r\n                    pie: {\r\n                        innerSize: '70%',\r\n                        allowPointSelect: true,\r\n                        cursor: 'pointer',\r\n                        dataLabels: {\r\n                            enabled: true,\r\n                            format: '<b>{point.name}</b>: {y}'\r\n                        }\r\n                    }\r\n                },\r\n                series: [{\r\n                    name: 'Count',\r\n                    data: [{\r\n                        name: 'Completed Task(s)',\r\n                        y: 2,\r\n                        color: \"#1b3e6e\"\r\n                    }, {\r\n                        name: 'Incomplete Task(s)',\r\n                        y: 8,\r\n                        color: \"#6c9fe6\"\r\n                    }]\r\n                }]\r\n            },\r\n            rewardHist: {\r\n                chart: {\r\n                    type: 'line'\r\n                },\r\n                title: {\r\n                    text: 'Points Reward History'\r\n                },\r\n                xAxis: {\r\n                    categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep']\r\n                },\r\n                series: [{\r\n                    name: \"Points Per Month\",\r\n                    data: [20, 10, 15, 7, 10, 16, 10, 14, 8]\r\n                }],\r\n            },\r\n            taskDist: {\r\n                chart: {\r\n                    type: 'column'\r\n                },\r\n                title: {\r\n                    text: 'Task Distribution'\r\n                },\r\n                xAxis: {\r\n                    categories: ['Project 1', 'Project 2', 'Project 3', 'Project 4']\r\n                },\r\n                yAxis: {\r\n                    min: 0,\r\n                    title: {\r\n                        text: 'Total No. of Tasks'\r\n                    },\r\n                    stackLabels: {\r\n                        enabled: true,\r\n                        \r\n                    }\r\n                },\r\n                tooltip: {\r\n                    headerFormat: '<b>{point.x}</b><br/>',\r\n                    pointFormat: '{series.name}: {point.y}'\r\n                },\r\n                plotOptions: {\r\n                    column: {\r\n                        stacking: 'normal',\r\n                    }\r\n                },\r\n                series: [{\r\n                    name: 'Completed',\r\n                    data: [0, 1, 1, 0],\r\n                    color: \"#1b3e6e\"\r\n                }, {\r\n                    name: 'Incomplete',\r\n                    data: [3, 3, 1, 1],\r\n                    color: \"#6c9fe6\"\r\n                }]\r\n            },\r\n            taskStatus_employer: {\r\n                chart: {\r\n                    type: 'pie'\r\n                },\r\n                title: {\r\n                    text: 'Task Status'\r\n                },\r\n                plotOptions: {\r\n                    pie: {\r\n                        innerSize: '70%',\r\n                        allowPointSelect: true,\r\n                        cursor: 'pointer',\r\n                        dataLabels: {\r\n                            enabled: true,\r\n                            format: '<b>{point.name}</b>: {y}'\r\n                        }\r\n                    }\r\n                },\r\n                series: [{\r\n                    name: 'Count',\r\n                    data: [{\r\n                        name: 'Completed Task(s)',\r\n                        y: 2,\r\n                        color: \"#1b3e6e\"\r\n                    }, {\r\n                        name: 'Incomplete Task(s)',\r\n                        y: 2,\r\n                        color: \"#6c9fe6\"\r\n                    }]\r\n                }]\r\n            },\r\n            taskDist_employer: {\r\n                chart: {\r\n                    type: 'column'\r\n                },\r\n                title: {\r\n                    text: 'Task Distribution'\r\n                },\r\n                xAxis: {\r\n                    categories: ['Project 1', 'Project 2', 'Project 3', 'Project 4', 'Project 5', 'Project 6']\r\n                },\r\n                yAxis: {\r\n                    min: 0,\r\n                    title: {\r\n                        text: 'Total No. of Tasks'\r\n                    },\r\n                    stackLabels: {\r\n                        enabled: true,\r\n                        \r\n                    }\r\n                },\r\n                tooltip: {\r\n                    headerFormat: '<b>{point.x}</b><br/>',\r\n                    pointFormat: '{series.name}: {point.y}'\r\n                },\r\n                plotOptions: {\r\n                    column: {\r\n                        stacking: 'normal',\r\n                    }\r\n                },\r\n                series: [{\r\n                    name: 'Completed',\r\n                    data: [10, 4, 2, 7, 2,0],\r\n                    color: \"#1b3e6e\"\r\n                }, {\r\n                    name: 'Incomplete',\r\n                    data: [3, 5, 10, 2, 2, 10],\r\n                    color: \"#6c9fe6\"\r\n                }]\r\n            },\r\n            revenue: {\r\n                chart: {\r\n                    type: 'line'\r\n                },\r\n                title: {\r\n                    text: 'Revenue Growth'\r\n                },\r\n                xAxis: {\r\n                    categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep']\r\n                },\r\n                series: [{\r\n                    name: \"Profits Per Month\",\r\n                    data: [20000, 40000, 50000, 70000, 100000, 160000, 100000, 99000, 110000]\r\n                }],\r\n            },\r\n            filter: '',\r\n            sort: '',\r\n            direction: 'asc',\r\n            columns: ['task','proj','status','person'],\r\n            // rows: [\r\n            //     {task:'Complete UI', proj: 'Project 5', status: 'Completed', person: 'James', deadline: '28/11/2021'},\r\n            //     {task:'Prototype', proj: 'Project 1', status: 'New', person: 'James', deadline: '28/11/2021'},\r\n            //     {task:'Draft Proposal', proj: 'Project 2', status: 'In Progress', person: 'James', deadline: '28/11/2021'},\r\n            //     {task:'Setup Database', proj: 'Project 2', status: 'In Progress', person: 'John', deadline: '20/11/2021'},\r\n            //     {task:'Draft Proposal', proj: 'Project 1', status: 'New', person: 'Kelly', deadline: '2/11/2021'},\r\n            //     {task:'UI Testing', proj: 'Project 1',status: 'Completed', person: 'Den', deadline: '10/11/2021'}\r\n            // ]\r\n    }\r\n  },\r\n  computed: {\r\n        filteredRows() {\r\n                return this.tasks.filter(row => {\r\n                const task_name = row.task_name.toString().toLowerCase();\r\n                const task_status = row.task_status.toLowerCase();\r\n                // const user_id = row.user_id;\r\n                const searchTerm = this.filter.toLowerCase();\r\n\r\n                return task_name.includes(searchTerm) || task_status.includes(searchTerm);\r\n            });\r\n        },\r\n  },\r\n  created() {\r\n      firebase.auth().onAuthStateChanged((user) => {\r\n            if (user) {\r\n                firebase.database().ref('users/' + user.uid + '/user_type' ).on('value', (snapshot) => {\r\n                    this.type = snapshot.val();  \r\n                }); \r\n\r\n                firebase.database().ref('tasks/').on('value', (snapshot) => {\r\n                    console.log(\"type is \" + this.type)\r\n                    if (this.type == \"employer\") {\r\n                        this.num_task = snapshot.val().length;\r\n                        snapshot.forEach((childSnapshot) => {\r\n                            var task = childSnapshot.val();\r\n                            this.tasks.push(task);\r\n                            if (task.task_status == \"Completed\") {\r\n                                this.completed_tasks += 1;\r\n                            } else {\r\n                                this.incomplete_tasks += 1;\r\n                            }\r\n                        })\r\n                    } else {\r\n                        snapshot.forEach((childSnapshot) => {\r\n                            var task = childSnapshot.val();\r\n                            if (task.user_id == user.uid) {\r\n                                this.tasks.push(task);\r\n                                this.num_task += 1;\r\n                                if (task.task_status == \"Completed\") {\r\n                                    this.completed_tasks += 1;\r\n                                } else {\r\n                                    this.incomplete_tasks += 1;\r\n                                }\r\n                            } \r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n}\r\n</script>\r\n<style>\r\n.base {\r\n    margin-top: 80px;\r\n}\r\n\r\n.heading{\r\n    box-shadow: 0px 5px 0px rgba(83, 90, 249, 0.81);\r\n    width:max-content;\r\n    margin: 57px auto;\r\n}\r\n#bgcolor{\r\n    background: rgb(255, 220, 156);\r\n}\r\n.highcharts-title{\r\n    font-family: Arial, Helvetica, sans-serif\r\n}\r\n.table{\r\n    table-layout:fixed;\r\n    width:100%;\r\n}\r\n.task_list{\r\n    overflow-y:scroll;\r\n}\r\n.page{\r\n    min-height: 100vh;\r\n    width:100%;\r\n    /* display: flex; */\r\n}\r\n.pageContent{\r\n  min-height:100vh;\r\n  /* margin-top:60px; */\r\n  background:rgba(248, 248, 248, 1)\r\n;\r\n  padding-top:60px;\r\n  padding-bottom:60px;\r\n}\r\n</style>\r\n<style scoped>\r\n.employer-projects{\r\n      display: flex;\r\n    flex-wrap: wrap;\r\n}\r\n.new-project-btn{\r\nbackground: linear-gradient(0deg, #504DFF, #504DFF), rgba(78, 74, 255, 0.61);\r\nborder-radius: 5px;\r\ncolor: white;\r\n}\r\n.modal-title{\r\n  margin: auto;\r\n}\r\n.modal-dialog h5{\r\n  color:white;\r\n}\r\n/* employee homepage aka dashboard */\r\n    .container {\r\n        margin:auto;\r\n    }\r\n    h1 {\r\n        text-align: left;\r\n        /* padding-top: 25px; */\r\n    }\r\n    .task-info {\r\n        height: 100px;\r\n        width: 270px;\r\n        background: linear-gradient(57.11deg, #6D9DF8 -4.9%, #6461FF 101.23%, rgba(109, 157, 248, 0.64) 101.24%, rgba(109, 157, 248, 0) 101.24%);        color:white;\r\n    }\r\n    .card-body {\r\n        padding: 10px 0px;\r\n    }\r\n    .chart {\r\n        padding: 0px;\r\n        margin: 5px;\r\n    }\r\n    .task_list {\r\n        margin: 5px;\r\n        height: 400px;\r\n    }\r\n    img {\r\n        width: 20px;\r\n    }\r\n    .button {\r\n        border: none;\r\n        background-color: transparent;\r\n    }\r\n</style>"],"sourceRoot":""}]}