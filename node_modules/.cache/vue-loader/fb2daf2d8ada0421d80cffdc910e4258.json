{"remainingRequest":"C:\\Users\\jingg\\Desktop\\SMU\\Sem_2.1\\IS216_WADll\\WADll\\WAD2LMAOO\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\jingg\\Desktop\\SMU\\Sem_2.1\\IS216_WADll\\WADll\\WAD2LMAOO\\src\\components\\Home.vue?vue&type=style&index=0&id=8dc7cce2&lang=css","dependencies":[{"path":"C:\\Users\\jingg\\Desktop\\SMU\\Sem_2.1\\IS216_WADll\\WADll\\WAD2LMAOO\\src\\components\\Home.vue","mtime":1635842333280},{"path":"C:\\Users\\jingg\\Desktop\\SMU\\Sem_2.1\\IS216_WADll\\WADll\\WAD2LMAOO\\node_modules\\css-loader\\dist\\cjs.js","mtime":1633958726044},{"path":"C:\\Users\\jingg\\Desktop\\SMU\\Sem_2.1\\IS216_WADll\\WADll\\WAD2LMAOO\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1634603901512},{"path":"C:\\Users\\jingg\\Desktop\\SMU\\Sem_2.1\\IS216_WADll\\WADll\\WAD2LMAOO\\node_modules\\postcss-loader\\src\\index.js","mtime":1633958718307},{"path":"C:\\Users\\jingg\\Desktop\\SMU\\Sem_2.1\\IS216_WADll\\WADll\\WAD2LMAOO\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1633958718216},{"path":"C:\\Users\\jingg\\Desktop\\SMU\\Sem_2.1\\IS216_WADll\\WADll\\WAD2LMAOO\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1634603901504}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQovKiAuY29udGFpbmVyLWZsdWlkew0KICAgIGJhY2tncm91bmQ6IHdoaXRlOw0KICAgIHJnYigyNTUsIDI1NSwgMTkzKTsNCn0gKi8NCi5oZWFkaW5new0KICAgIGJveC1zaGFkb3c6IDBweCA1cHggMHB4IHJnYmEoODMsIDkwLCAyNDksIDAuODEpOw0KICAgIHdpZHRoOm1heC1jb250ZW50Ow0KICAgIG1hcmdpbjogNTdweCBhdXRvOw0KfQ0KDQojYmdjb2xvcnsNCiAgICBiYWNrZ3JvdW5kOiByZ2IoMjU1LCAyMjAsIDE1Nik7DQp9DQouaGlnaGNoYXJ0cy10aXRsZXsNCiAgICBmb250LWZhbWlseTogQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZg0KfQ0KDQoudGFibGV7DQogICAgdGFibGUtbGF5b3V0OmZpeGVkOw0KICAgIHdpZHRoOjEwMCU7DQp9DQoudGFza19saXN0ew0KICAgIG92ZXJmbG93LXk6c2Nyb2xsOw0KfQ0KLnBhZ2V7DQogICAgbWluLWhlaWdodDogMTAwdmg7DQogICAgd2lkdGg6MTAwJTsNCiAgICAvKiBkaXNwbGF5OiBmbGV4OyAqLw0KfQ0KLnBhZ2VDb250ZW50ew0KICBtaW4taGVpZ2h0OjEwMHZoOw0KICAvKiBtYXJnaW4tdG9wOjYwcHg7ICovDQogIGJhY2tncm91bmQ6cmdiYSgyNDgsIDI0OCwgMjQ4LCAxKQ0KOw0KICBwYWRkaW5nLXRvcDo2MHB4Ow0KICBwYWRkaW5nLWJvdHRvbTo2MHB4Ow0KfQ0K"},{"version":3,"sources":["C:\\Users\\jingg\\Desktop\\SMU\\Sem_2.1\\IS216_WADll\\WADll\\WAD2LMAOO\\src\\components\\Home.vue"],"names":[],"mappings":"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","file":"C:/Users/jingg/Desktop/SMU/Sem_2.1/IS216_WADll/WADll/WAD2LMAOO/src/components/Home.vue","sourceRoot":"","sourcesContent":["<template>\r\n<div>\r\n<div class = \"page\" v-if = \"usertype !== 'na'\">\r\n    <div class=\"container\">\r\n        <Navbar/>\r\n    </div>\r\n\r\n<!-- <div class = \"pageContent\"> -->\r\n    <!-- {{usertype}} -->\r\n    <div class=\"container-fluid\" style=\"background: white\">\r\n    <!-- <div v-if=\"usertype ==='employer'\" class = \"employer-projects\"> -->\r\n        <!-- <EmployerProject :projectName =\"'Proj1'\" :projectAssignees = \"'Ruby Kurosawa'\" :projectAssigned = \"'14/7/2021'\"\r\n        :projectDue =\"'14/11/2021'\" :projectStatus = \"'incomplete'\"  :projectReward = \"'500'\"/>\r\n        <EmployerProject :projectName =\"'Proj2'\" :projectAssignees = \"'Karin'\" :projectAssigned = \"'11/6/2021'\"\r\n        :projectDue =\"'12/10/2021'\" :projectStatus = \"'incomplete'\"  :projectReward = \"'460'\"/>\r\n        <EmployerProject :projectName =\"'Proj2'\" :projectAssignees = \"'Karin'\" :projectAssigned = \"'11/6/2021'\"\r\n        :projectDue =\"'12/10/2021'\" :projectStatus = \"'incomplete'\"  :projectReward = \"'460'\"/>\r\n        <EmployerProject :projectName =\"'Proj2'\" :projectAssignees = \"'Karin'\" :projectAssigned = \"'11/6/2021'\"\r\n        :projectDue =\"'12/10/2021'\" :projectStatus = \"'incomplete'\"  :projectReward = \"'460'\"/>\r\n        <EmployerProject :projectName =\"'Proj2'\" :projectAssignees = \"'Karin'\" :projectAssigned = \"'11/6/2021'\"\r\n        :projectDue =\"'12/10/2021'\" :projectStatus = \"'incomplete'\"  :projectReward = \"'460'\"/>\r\n        <AddItem :itemType=\"'project'\"/> -->\r\n\r\n<!-- Modal -->\r\n<!-- <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h2 class=\"modal-title\" id=\"exampleModalLabel\" align=\"center\">Add new project</h2>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <table class=\"table\">\r\n          <tr>\r\n            <th scope = \"row\">Project Name</th>\r\n            <td><input type = \"text\" class = \"form-control\" /></td>\r\n          </tr>\r\n          <tr>\r\n            <th scope = \"row\">Rewarded points:</th>\r\n            <td><input type = \"number\" class = \"form-control\" /></td>\r\n          </tr>\r\n          <tr>\r\n            <th scope = \"row\">Project due:</th>\r\n            <td><input type = \"date\" class = \"form-control\" /></td>\r\n          </tr>\r\n          <tr>\r\n            <th scope = \"row\">Add assignees:</th>\r\n            <td><input type = \"text\" class = \"form-control\" /></td>\r\n          </tr>\r\n        </table>\r\n        <button class = \"btn new-project-btn\" data-dismiss=\"modal\">Assign project</button>\r\n      </div>\r\n    \r\n\r\n    </div>\r\n    <h5>Click anywhere to cancel</h5>\r\n  </div>\r\n</div> -->\r\n        <div id=\"bg\" class=\"row m-4\">\r\n            <div class=\"container-fluid\">\r\n                <div class=\"row\">\r\n                    <div>\r\n                        <h1 class=\"heading\"> {{currentMonth()}} Summary</h1>\r\n                    </div>\r\n                    <div class=\"row justify-content-between px-5\">\r\n                        <div class=\"card task-info g-2 mx-3 col-4 col-xl-4 col-md-4\">\r\n                            <div class=\"card-body\">\r\n                                <h5 class=\"card-title\">Total No. of Task(s)</h5>\r\n                                <h4 class=\"card-text pt-2\">{{ totalTasks }} </h4>\r\n                            </div>\r\n                        </div>   \r\n                        <div class=\"card task-info g-2 mx-3 col-4 col-xl-4 col-md-4\">\r\n                            <div class=\"card-body\">\r\n                                <h5 class=\"card-title\">No. of Completed Task(s)</h5>\r\n                                <h4 class=\"card-text pt-2\">{{completedTasks}} </h4>\r\n                            </div>\r\n                        </div>  \r\n                        <div class=\"card task-info g-2 mx-3 col-4 col-xl-4 col-md-4\">\r\n                            <div class=\"card-body\">\r\n                                <h5 class=\"card-title\">No. of Incomplete Task(s)</h5>\r\n                                <h4 class=\"card-text pt-2\">{{incompleteTasks}}  </h4>\r\n                            </div>\r\n                        </div>  \r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n                <div class=\"container-fluid p-0\">\r\n                    <div class=\"row p-2 my-4 border border-dark\" id=\"bgcolor\">\r\n                        <div class=\"container-fluid\">\r\n                            <div class=\"row mx-0 p-0 justify-content-between\">\r\n                                <div class=\"col-md-6\" width=\"100%\"><b><highcharts :options=\"taskStatus_employer\" class=\"chart col border border-dark\"></highcharts></b></div>\r\n                                <div class=\"col-md-6\" width=\"100%\"><b><highcharts :options=\"revenue\" class=\"chart col border border-dark\"></highcharts></b></div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"container-fluid\">\r\n                            <div class=\"row mx-0 p-0 justify-content-between\">\r\n                                <div class=\"col-md-6\"><b><highcharts :options=\"taskDist_employer\" class=\"chart border border-dark\" width=\"100%\"></highcharts></b></div>\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"task_list border border-dark bg-white \">\r\n                                        <h6 class=\"pt-2 \" style=\"font-size: 18px\"><b >Project Task List</b></h6><input type=\"text\" placeholder=\"Filter by task/status/person\" class=\"w-100 mx-2\" v-model=\"filter\" />\r\n                                        <table class=\"table table-hover mt-2 table-striped\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th style=\"background: #b6cefb\" scope=\"col\">Task Status <button class=\"button\" @click=\"sortTable('status', direction)\"><img src=\"../assets/sort.png\"></button></th>\r\n                                                    <th style=\"background: #b6cefb\" scope=\"col\">Task Name <button class=\"button\" @click=\"sortTable('task', direction)\"><img src=\"../assets/sort.png\"></button></th>\r\n                                                    <th style=\"background: #b6cefb\" scope=\"col\">Project Name <button class=\"button\" @click=\"sortTable('proj', direction)\"><img src=\"../assets/sort.png\"></button></th>\r\n                                                    <th style=\"background: #b6cefb\" scope=\"col\">Person In-charge <button class=\"button\" @click=\"sortTable('person', direction)\"><img src=\"../assets/sort.png\"></button></th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                <tr v-for=\"(row, index) in filteredRows\" :key=\"`task-${index}`\">\r\n                                                    <td>{{ row.status }}</td>\r\n                                                    <td>{{ row.task }}</td>\r\n                                                    <td>{{ row.proj }}</td>\r\n                                                    <td>{{ row.person }}</td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                                    \r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n  </div>\r\n\r\n</div>\r\n<div v-else>\r\n<h3>You are not logged in.</h3>\r\n</div>\r\n</div>\r\n\r\n<!-- </div> -->\r\n    \r\n</template>\r\n<script>\r\n// import { onBeforeMount } from '@vue/runtime-core'\r\nimport {Chart} from 'highcharts-vue'\r\nimport Navbar from \"./Navbar.vue\"\r\nimport mixin from \"../mixin\"\r\n// import EmployerProject from \"./EmployerProject.vue\"\r\n// import AddItem from \"./AddItem.vue\"\r\n\r\nexport default {\r\n    name:\"Home\",\r\n    mixins:[mixin],\r\n      components: {\r\n    Navbar,\r\n    // EmployerProject,\r\n    // AddItem,\r\n    highcharts: Chart \r\n  },\r\n//   props:[\"usertype\"],\r\n  beforeMount(){\r\n       this.getUserType()\r\n        if(this.usertype === \"na\"){\r\n            this.$router.push(\"/authenticate\")\r\n        }\r\n  },\r\n    methods: {\r\n        currentMonth() {\r\n            const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n            const current = new Date();\r\n            const month = months[current.getMonth()];\r\n            return month;\r\n        },\r\n        sortTable(key,direction) {\r\n            this.sort = `${key} > ${direction}`\r\n            if (direction === 'asc') {\r\n                this.rows.sort((a, b) => a[key] > b[key] ? 1: -1)\r\n                this.direction = 'desc';\r\n            } else {\r\n                this.rows.sort((a, b) => a[key] < b[key] ? 1: -1)\r\n                this.direction = 'asc';\r\n            }\r\n        }\r\n    },\r\n\r\n  \r\n  data(){\r\n    return{\r\n      arr:[],\r\n            taskStatus: {\r\n                chart: {\r\n                    type: 'pie'\r\n                },\r\n                title: {\r\n                    text: 'Task Status'\r\n                },\r\n                plotOptions: {\r\n                    pie: {\r\n                        innerSize: '70%',\r\n                        allowPointSelect: true,\r\n                        cursor: 'pointer',\r\n                        dataLabels: {\r\n                            enabled: true,\r\n                            format: '<b>{point.name}</b>: {y}'\r\n                        }\r\n                    }\r\n                },\r\n                series: [{\r\n                    name: 'Count',\r\n                    data: [{\r\n                        name: 'Completed Task(s)',\r\n                        y: 2,\r\n                        color: \"#1b3e6e\"\r\n                    }, {\r\n                        name: 'Incomplete Task(s)',\r\n                        y: 8,\r\n                        color: \"#6c9fe6\"\r\n                    }]\r\n                }]\r\n            },\r\n            rewardHist: {\r\n                chart: {\r\n                    type: 'line'\r\n                },\r\n                title: {\r\n                    text: 'Points Reward History'\r\n                },\r\n                xAxis: {\r\n                    categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep']\r\n                },\r\n                series: [{\r\n                    name: \"Points Per Month\",\r\n                    data: [20, 10, 15, 7, 10, 16, 10, 14, 8]\r\n                }],\r\n            },\r\n            taskDist: {\r\n                chart: {\r\n                    type: 'column'\r\n                },\r\n                title: {\r\n                    text: 'Task Distribution'\r\n                },\r\n                xAxis: {\r\n                    categories: ['Project 1', 'Project 2', 'Project 3', 'Project 4']\r\n                },\r\n                yAxis: {\r\n                    min: 0,\r\n                    title: {\r\n                        text: 'Total No. of Tasks'\r\n                    },\r\n                    stackLabels: {\r\n                        enabled: true,\r\n                        \r\n                    }\r\n                },\r\n                tooltip: {\r\n                    headerFormat: '<b>{point.x}</b><br/>',\r\n                    pointFormat: '{series.name}: {point.y}'\r\n                },\r\n                plotOptions: {\r\n                    column: {\r\n                        stacking: 'normal',\r\n                    }\r\n                },\r\n                series: [{\r\n                    name: 'Completed',\r\n                    data: [0, 1, 1, 0],\r\n                    color: \"#1b3e6e\"\r\n                }, {\r\n                    name: 'Incomplete',\r\n                    data: [3, 3, 1, 1],\r\n                    color: \"#6c9fe6\"\r\n                }]\r\n            },\r\n            taskStatus_employer: {\r\n                chart: {\r\n                    type: 'pie'\r\n                },\r\n                title: {\r\n                    text: 'Task Status'\r\n                },\r\n                plotOptions: {\r\n                    pie: {\r\n                        innerSize: '70%',\r\n                        allowPointSelect: true,\r\n                        cursor: 'pointer',\r\n                        dataLabels: {\r\n                            enabled: true,\r\n                            format: '<b>{point.name}</b>: {y}'\r\n                        }\r\n                    }\r\n                },\r\n                series: [{\r\n                    name: 'Count',\r\n                    data: [{\r\n                        name: 'Completed Task(s)',\r\n                        y: 25,\r\n                        color: \"#1b3e6e\"\r\n                    }, {\r\n                        name: 'Incomplete Task(s)',\r\n                        y: 32,\r\n                        color: \"#6c9fe6\"\r\n                    }]\r\n                }]\r\n            },\r\n            taskDist_employer: {\r\n                chart: {\r\n                    type: 'column'\r\n                },\r\n                title: {\r\n                    text: 'Task Distribution'\r\n                },\r\n                xAxis: {\r\n                    categories: ['Project 1', 'Project 2', 'Project 3', 'Project 4', 'Project 5', 'Project 6']\r\n                },\r\n                yAxis: {\r\n                    min: 0,\r\n                    title: {\r\n                        text: 'Total No. of Tasks'\r\n                    },\r\n                    stackLabels: {\r\n                        enabled: true,\r\n                        \r\n                    }\r\n                },\r\n                tooltip: {\r\n                    headerFormat: '<b>{point.x}</b><br/>',\r\n                    pointFormat: '{series.name}: {point.y}'\r\n                },\r\n                plotOptions: {\r\n                    column: {\r\n                        stacking: 'normal',\r\n                    }\r\n                },\r\n                series: [{\r\n                    name: 'Completed',\r\n                    data: [10, 4, 2, 7, 2,0],\r\n                    color: \"#1b3e6e\"\r\n                }, {\r\n                    name: 'Incomplete',\r\n                    data: [3, 5, 10, 2, 2, 10],\r\n                    color: \"#6c9fe6\"\r\n                }]\r\n            },\r\n            revenue: {\r\n                chart: {\r\n                    type: 'line'\r\n                },\r\n                title: {\r\n                    text: 'Revenue Growth'\r\n                },\r\n                xAxis: {\r\n                    categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep']\r\n                },\r\n                series: [{\r\n                    name: \"Profits Per Month\",\r\n                    data: [20000, 40000, 50000, 70000, 100000, 160000, 100000, 99000, 110000]\r\n                }],\r\n            },\r\n            filter: '',\r\n            sort: '',\r\n            direction: 'asc',\r\n            columns: ['task','proj','status','person'],\r\n            rows: [\r\n                {task:'Complete UI', proj: 'Project 5', status: 'Completed', person: 'James', deadline: '28/11/2021'},\r\n                {task:'Prototype', proj: 'Project 1', status: 'New', person: 'James', deadline: '28/11/2021'},\r\n                {task:'Draft Proposal', proj: 'Project 2', status: 'In Progress', person: 'James', deadline: '28/11/2021'},\r\n                {task:'Setup Database', proj: 'Project 2', status: 'In Progress', person: 'John', deadline: '20/11/2021'},\r\n                {task:'Draft Proposal', proj: 'Project 1', status: 'New', person: 'Kelly', deadline: '2/11/2021'},\r\n                {task:'UI Testing', proj: 'Project 1',status: 'Completed', person: 'Den', deadline: '10/11/2021'}\r\n            ]\r\n    }\r\n  },\r\n  computed: {\r\n        filteredRows() {\r\n                return this.rows.filter(row => {\r\n                const task = row.task.toString().toLowerCase();\r\n                const status = row.status.toLowerCase();\r\n                const person = row.person.toLowerCase();\r\n                const searchTerm = this.filter.toLowerCase();\r\n\r\n                return task.includes(searchTerm) || status.includes(searchTerm) || person.includes(searchTerm);\r\n            });\r\n        },\r\n          totalTasks(){\r\n                if(this.loggedUser.user_type === \"employee\"){\r\n                    console.log(typeof this.tasks.filter(task => task.user_id === this.loggedUser.user_id))\r\n                        console.log(this.tasks.filter(task => task.user_id === this.loggedUser.user_id))\r\n\r\n                    return this.tasks.filter(task => task.user_id === this.loggedUser.user_id).length\r\n                }\r\n                else{\r\n                    return this.tasks.length\r\n                }\r\n            },\r\n\r\n          incompleteTasks(){\r\n                if(this.loggedUser.user_type === \"employee\"){\r\n \r\n\r\n                    return this.tasks.filter(task =>( task.user_id === this.loggedUser.user_id&&\r\n                        (task.task_status !== \"Completed\") )).length\r\n                }\r\n                else{\r\n                    return this.tasks.filter(task =>\r\n                        (task.task_status !== \"Completed\")).length\r\n                }\r\n            },\r\n\r\n          completedTasks(){\r\n                if(this.loggedUser.user_type === \"employee\"){\r\n \r\n\r\n                    return this.tasks.filter(task =>( task.user_id === this.loggedUser.user_id&&\r\n                        (task.task_status === \"Completed\") )).length\r\n                }\r\n                else{\r\n                    return this.tasks.filter(task =>\r\n                        (task.task_status === \"Completed\")).length\r\n                }\r\n            },\r\n\r\n  }\r\n  ,\r\n\r\n\r\n}\r\n</script>\r\n<style>\r\n/* .container-fluid{\r\n    background: white;\r\n    rgb(255, 255, 193);\r\n} */\r\n.heading{\r\n    box-shadow: 0px 5px 0px rgba(83, 90, 249, 0.81);\r\n    width:max-content;\r\n    margin: 57px auto;\r\n}\r\n\r\n#bgcolor{\r\n    background: rgb(255, 220, 156);\r\n}\r\n.highcharts-title{\r\n    font-family: Arial, Helvetica, sans-serif\r\n}\r\n\r\n.table{\r\n    table-layout:fixed;\r\n    width:100%;\r\n}\r\n.task_list{\r\n    overflow-y:scroll;\r\n}\r\n.page{\r\n    min-height: 100vh;\r\n    width:100%;\r\n    /* display: flex; */\r\n}\r\n.pageContent{\r\n  min-height:100vh;\r\n  /* margin-top:60px; */\r\n  background:rgba(248, 248, 248, 1)\r\n;\r\n  padding-top:60px;\r\n  padding-bottom:60px;\r\n}\r\n</style>\r\n<style scoped>\r\n.employer-projects{\r\n      display: flex;\r\n    flex-wrap: wrap;\r\n}\r\n\r\n\r\n.new-project-btn{\r\nbackground: linear-gradient(0deg, #504DFF, #504DFF), rgba(78, 74, 255, 0.61);\r\nborder-radius: 5px;\r\ncolor: white;\r\n}\r\n.modal-title{\r\n  margin: auto;\r\n}\r\n.modal-dialog h5{\r\n  color:white;\r\n}\r\n\r\n/* employee homepage aka dashboard */\r\n\r\n    .container {\r\n        margin:auto;\r\n    }\r\n\r\n    h1 {\r\n        text-align: left;\r\n        /* padding-top: 25px; */\r\n    }\r\n\r\n    .task-info {\r\n        height: 100px;\r\n        width: 270px;\r\n        background: linear-gradient(57.11deg, #6D9DF8 -4.9%, #6461FF 101.23%, rgba(109, 157, 248, 0.64) 101.24%, rgba(109, 157, 248, 0) 101.24%);        color:white;\r\n    }\r\n\r\n    .card-body {\r\n        padding: 10px 0px;\r\n    }\r\n\r\n    .chart {\r\n        padding: 0px;\r\n        margin: 5px;\r\n    }\r\n\r\n    .task_list {\r\n        margin: 5px;\r\n        height: 400px;\r\n    }\r\n\r\n    img {\r\n        width: 20px;\r\n    }\r\n\r\n    .button {\r\n        border: none;\r\n        background-color: transparent;\r\n    }\r\n\r\n</style>"]}]}