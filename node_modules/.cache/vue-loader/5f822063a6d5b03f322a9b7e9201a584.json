{"remainingRequest":"/Users/shintabek/Documents/GitHub/WAD2LMAOO/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/shintabek/Documents/GitHub/WAD2LMAOO/src/components/EmployeeList.vue?vue&type=style&index=0&id=19c0fac8&scoped=true&lang=css","dependencies":[{"path":"/Users/shintabek/Documents/GitHub/WAD2LMAOO/src/components/EmployeeList.vue","mtime":1636699805468},{"path":"/Users/shintabek/Documents/GitHub/WAD2LMAOO/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shintabek/Documents/GitHub/WAD2LMAOO/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1634786752534},{"path":"/Users/shintabek/Documents/GitHub/WAD2LMAOO/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/shintabek/Documents/GitHub/WAD2LMAOO/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shintabek/Documents/GitHub/WAD2LMAOO/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":1634786752533}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgojZW1wewogICAgd2lkdGg6IG1heC1jb250ZW50OwogICAgbWFyZ2luOiBhdXRvOwogICAgbWFyZ2luLXRvcDogODBweDsKICAgIGJveC1zaGFkb3c6IDBweCA1cHggMHB4IHJnYmEoODMsIDkwLCAyNDksIDAuODEpOwp9CgouZW1wbG95ZWVzUGFnZXsKICAgIG1hcmdpbi10b3A6IDUwcHg7Cn0KCi5zZWFyY2h7CiAgICB3aWR0aDogOTAlOwogICAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87Cn0KCi5jYXJkIHsKICAgIHdpZHRoOiAyNzBweDsKICAgIG1hcmdpbjogMjBweCBhdXRvOwogICAgaGVpZ2h0OiA1MDBweDsKfQoKLmRldGFpbHN7CiAgICB0ZXh0LWFsaWduOiBsZWZ0Owp9CgouY2FyZC1pbWctdG9wIHsKICAgIHdpZHRoOiAyNjhweDsKICAgIG9iamVjdC1maXQ6IGNvdmVyOwp9Cgoudmlldy1idG4gewogICAgbWFyZ2luLXJpZ2h0OiAxMHB4IDsKICAgIG1hcmdpbi1sZWZ0OiA1cHg7CiAgICB3aWR0aDogMTAwcHg7Cn0KCi5maXJlLWJ0biB7CiAgICBtYXJnaW4tcmlnaHQ6IDVweCA7CiAgICBtYXJnaW4tbGVmdDogNXB4OwogICAgd2lkdGg6IDEwMHB4Owp9CgouYnV0dG9ucyB7CiAgICBtYXJnaW46IDAgYXV0bzsKfQoKLmNvbnRhaW5lcnsKICAgIG1hcmdpbi10b3A6IDIwcHg7Cn0KCg=="},{"version":3,"sources":["/Users/shintabek/Documents/GitHub/WAD2LMAOO/src/components/EmployeeList.vue"],"names":[],"mappings":"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","file":"/Users/shintabek/Documents/GitHub/WAD2LMAOO/src/components/EmployeeList.vue","sourceRoot":"","sourcesContent":["<template>\n<div class = \"page\">\n    <Navbar/>\n      <h1 id = \"emp\">List of Employees</h1>\n\n    <div class = \"employeesPage\">\n        <div class=\"search\">\n            <input type = \"text\" class = \"form-control\" placeholder=\"Search by name\" v-model=\"filter\"/>\n        </div>\n        <a href=\"#\" class=\" btn btn-dark btn-xs mt-3\" @click=\"create()\">Add Employee</a>\n        <div class=\"album\">                    \n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-xl-3 col-lg-4 col-md-6 \" v-for=\"employee in filteredRows\" v-bind:key=\"employee.user_id\">\n                        <div class=\" card shadow-sm\">\n                            <img :src=\"employee.image\" width=\"100%\" height=\"225\" background=\"#55595c\" color=\"#eceeef\" class=\"card-img-top rounded\" text=\"Thumbnail\" >\n                            <div class=\"inline pt-3\">\n                                <h6>{{employee.name}}</h6>\n                            </div>\n\n                            <div class=\"card-body details d-block \">\n                                <p class=\"card-text\"> \n                                    <small><b>User ID:</b></small> <br> <small> {{employee.user_id}}</small><br>\n                                    <small><b>Department:</b></small> <br><small>{{employee.department_id}}</small><br>         \n                                    <small><b>Points:</b></small> <br> <small>{{employee.current_pts}}</small>         \n                                </p>\n                                <div class=\"buttons\">\n                                    <button class = \"btn border border-dark view-btn col\" @click=\"edit(employee)\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">Edit</button>\n                                    <button class = \"btn border border-dark fire-btn col\" @click=\"delete_user(employee.user_id)\">Remove</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div> \n            </div>\n        </div>\n    </div>\n\n                        \n    <div class=\"row m-1\"> \n            \n        <!-- Modal-->    \n        <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n            <div class=\"modal-dialog\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h5 class=\"modal-title text-dark text-start\" id=\"exampleModalLabel\">Edit Details</h5>\n                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                    </div>\n                    <div class=\"modal-body\">\n                        <table class =\"table table-bordered w-75 align-center\">\n                            <tr>\n                                <th class=\"text-start\">Name:</th>\n                                <td><input type  =\"text\" placeholder = \"Employee Name\" class = \"form-control\" v-model=\"this.employee.name\"/></td>\n                            </tr>\n                            <tr>\n                                <th class=\"text-start\">Position:</th>\n                                <td><input type  =\"text\" placeholder = \"Position\" class = \"form-control\" v-model=\"this.employee.position\"/></td>\n                            </tr>\n                            <tr>\n                                <th class=\"text-start\">Points:</th>\n                                <td><input type  =\"text\" placeholder = \"Position\" class = \"form-control\" v-model=\"this.employee.current_pts\"/></td>\n                            </tr>\n                        </table>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                        <button type=\"button\" class=\"btn btn-primary\" data-bs-dismiss=\"modal\" @click=\"update(this.employee.user_id)\" >Save changes</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- <button class = \"btn view-btn col\" @click=\"edit(employee)\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">Edit</button>\n        <button class = \"btn fire-btn col\" @click=\"delete_user(employee.user_id)\">Remove</button> -->\n    </div>\n\n\n</div>\n    \n</template>\n<script>\nimport Navbar from \"./Navbar.vue\"\n// import AddItem from \"./AddItem.vue\"\nimport mixin from \"../mixin\"\nimport firebase from \"firebase/compat\"\nexport default {\n    name:\"EmployeeList\",\n    components:{\n        Navbar,\n        // AddItem\n    },\n    mixins:[mixin],\n    // beforeMount(){\n    //     this.getUserType()\n    //     if(this.usertype != \"employer\"){\n    //         this.$router.push(\"/\")\n    //     }\n    // }\n    data() {\n        return {\n            type: \"\",\n            employees: [],\n            filter: \"\",\n            isOpen: false,\n            involved_reviews:[],\n            involved_projects:[],\n            involved_tasks:[],\n            employee: {\n                user_id: null,\n                name: null,\n                position: null,\n                current_pts: null\n            },\n        }\n    },\n    methods: {\n        create() {\n        this.$router.push('/employees/add')\n        },\n        edit(employee) {\n            console.log(employee)\n            this.employee = employee;\n            // console.log(this.employee)\n        },\n        delete_user(userID) {\n            // delete employee\n            firebase.database().ref('users/' + userID).remove()\n            .then(function() {\n                alert(\"Employee Deleted\")\n            })\n\n            // get reviews associated \n\n      firebase.database().ref('reviews/' ).on('value', (snapshot) => {\n        this.involved_reviews = []\n        snapshot.forEach((childSnapshot) => {\n          var review = childSnapshot.val();\n        //   console.log(review)\n          if(review.user_id ==  userID){\n          \n            this.involved_reviews.push(review.review_id);\n          }\n          \n        })\n        // console.log(this.involved_reviews)\n      }); \n\n            // delete reviews associated to employee\n            this.involved_reviews.forEach(review=>{\n                console.log(review)\n                firebase.database().ref('reviews/' + review).remove()\n                    .then(function() {\n                        console.log(\"Review Deleted\")\n                    })\n            })\n            // get tasks associated\n\n      firebase.database().ref('tasks/' ).on('value', (snapshot) => {\n        this.involved_tasks = []\n        snapshot.forEach((childSnapshot) => {\n          var task = childSnapshot.val();\n        //   console.log(task)\n          if(task.user_id ==  userID){\n          \n            this.involved_tasks.push(task.task_id);\n          }\n          \n        })\n        // console.log(this.involved_tasks)\n      }); \n\n\n\n            // delete tasks associated to employee\n            this.involved_tasks.forEach(task=>{\n                console.log(task)\n                firebase.database().ref('tasks/' + task).remove()\n                    .then(function() {\n                        console.log(\"Task Deleted\")\n                    })\n\n\n\n            })\n            // get projects associated\n\n\n      firebase.database().ref('projects/' ).on('value', (snapshot) => {\n        this.involved_projects = []\n        snapshot.forEach((childSnapshot) => {\n          var project = childSnapshot.val();\n        //   console.log(project)\n          if(project.user_id ==  userID){\n          \n            this.involved_projects.push(project.project_id);\n\n            \n          }\n          \n        })\n        // console.log(this.involved_projects)\n      }); \n\n\n            // delete projects associated to employee\n\n            this.involved_projects.forEach(project=>{\n                console.log(project)\n\n                firebase.database().ref('projects/' + project).remove()\n                    .then(function() {\n                        console.log(\"Project Deleted\")\n                    })\n\n                \n            })\n\n        },\n        update(userID){\n            // var newData = {\n            //     current_pts: this.points,\n            //     department_id: this.current_pts,\n                // email: this.email,\n                // employment_type: \"Full Time\",\n                // name: this.name,\n                // password: this.password,\n                // phone_no: this.phone_no,\n                // position: this.position,\n                // user_type: \"employee\"\n            // }\n\n            var updates = {};\n            updates['/users/' + userID] = this.employee;\n\n            firebase.database().ref().update(updates)\n\n            // this.num++\n            this.$router.push(\"/employees\")\n        }\n    },\n    created() {\n        // firebase.auth().onAuthStateChanged((user) => {\n        //     if (user) {\n                firebase.database().ref('users/' ).on('value', (snapshot) => {\n                    this.employees = [];\n                    snapshot.forEach((childSnapshot) => {\n                        var user = childSnapshot.val();\n                        // if (user.user_type == \"employee\") {\n                            // console.log(user)\n                            this.employees.push(user);\n                        // }\n                    })\n                }); \n            },\n    //     });\n        \n    // },\n    computed: {\n        filteredRows() {\n                return this.employees.filter(row => {\n                const name = row.name.toLowerCase();\n                const searchTerm = this.filter.toLowerCase();\n\n                return name.includes(searchTerm);\n            });\n        },\n  },\n\n}\n</script>\n<style scoped>\n\n#emp{\n    width: max-content;\n    margin: auto;\n    margin-top: 80px;\n    box-shadow: 0px 5px 0px rgba(83, 90, 249, 0.81);\n}\n\n.employeesPage{\n    margin-top: 50px;\n}\n\n.search{\n    width: 90%;\n    margin-left: auto;\n    margin-right: auto;\n}\n\n.card {\n    width: 270px;\n    margin: 20px auto;\n    height: 500px;\n}\n\n.details{\n    text-align: left;\n}\n\n.card-img-top {\n    width: 268px;\n    object-fit: cover;\n}\n\n.view-btn {\n    margin-right: 10px ;\n    margin-left: 5px;\n    width: 100px;\n}\n\n.fire-btn {\n    margin-right: 5px ;\n    margin-left: 5px;\n    width: 100px;\n}\n\n.buttons {\n    margin: 0 auto;\n}\n\n.container{\n    margin-top: 20px;\n}\n\n</style>"]}]}