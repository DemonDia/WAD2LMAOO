{"remainingRequest":"/Users/shintabek/Documents/GitHub/WAD2LMAOO/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/shintabek/Documents/GitHub/WAD2LMAOO/src/components/Home.vue?vue&type=style&index=0&id=8dc7cce2&lang=css","dependencies":[{"path":"/Users/shintabek/Documents/GitHub/WAD2LMAOO/src/components/Home.vue","mtime":1635210043863},{"path":"/Users/shintabek/Documents/GitHub/WAD2LMAOO/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shintabek/Documents/GitHub/WAD2LMAOO/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1634786752534},{"path":"/Users/shintabek/Documents/GitHub/WAD2LMAOO/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/shintabek/Documents/GitHub/WAD2LMAOO/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shintabek/Documents/GitHub/WAD2LMAOO/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":1634786752533}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5wYWdlewogICAgbWluLWhlaWdodDogMTAwdmg7CiAgICB3aWR0aDoxMDAlOwogICAgLyogZGlzcGxheTogZmxleDsgKi8KfQoucGFnZUNvbnRlbnR7CiAgbWluLWhlaWdodDoxMDB2aDsKICAvKiBtYXJnaW4tdG9wOjYwcHg7ICovCiAgYmFja2dyb3VuZDpyZ2JhKDI0OCwgMjQ4LCAyNDgsIDEpCjsKICBwYWRkaW5nLXRvcDo2MHB4OwogIHBhZGRpbmctYm90dG9tOjYwcHg7Cn0K"},{"version":3,"sources":["/Users/shintabek/Documents/GitHub/WAD2LMAOO/src/components/Home.vue"],"names":[],"mappings":";AAsaA,CAAC,CAAC,CAAC,CAAC,CAAC;IACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACV,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AACvB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;EACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;AAClC;EACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB","file":"/Users/shintabek/Documents/GitHub/WAD2LMAOO/src/components/Home.vue","sourceRoot":"","sourcesContent":["<template>\n<div class = \"page\" v-if = \"usertype !== 'na'\">\n<Navbar/>\n<!-- <div class = \"pageContent\"> -->\n    <!-- {{usertype}} -->\n    <div>\n    <!-- <div v-if=\"usertype ==='employer'\" class = \"employer-projects\"> -->\n        <!-- <EmployerProject :projectName =\"'Proj1'\" :projectAssignees = \"'Ruby Kurosawa'\" :projectAssigned = \"'14/7/2021'\"\n        :projectDue =\"'14/11/2021'\" :projectStatus = \"'incomplete'\"  :projectReward = \"'500'\"/>\n        <EmployerProject :projectName =\"'Proj2'\" :projectAssignees = \"'Karin'\" :projectAssigned = \"'11/6/2021'\"\n        :projectDue =\"'12/10/2021'\" :projectStatus = \"'incomplete'\"  :projectReward = \"'460'\"/>\n        <EmployerProject :projectName =\"'Proj2'\" :projectAssignees = \"'Karin'\" :projectAssigned = \"'11/6/2021'\"\n        :projectDue =\"'12/10/2021'\" :projectStatus = \"'incomplete'\"  :projectReward = \"'460'\"/>\n        <EmployerProject :projectName =\"'Proj2'\" :projectAssignees = \"'Karin'\" :projectAssigned = \"'11/6/2021'\"\n        :projectDue =\"'12/10/2021'\" :projectStatus = \"'incomplete'\"  :projectReward = \"'460'\"/>\n        <EmployerProject :projectName =\"'Proj2'\" :projectAssignees = \"'Karin'\" :projectAssigned = \"'11/6/2021'\"\n        :projectDue =\"'12/10/2021'\" :projectStatus = \"'incomplete'\"  :projectReward = \"'460'\"/>\n        <AddItem :itemType=\"'project'\"/> -->\n\n<!-- Modal -->\n<!-- <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"exampleModalLabel\" align=\"center\">Add new project</h2>\n      </div>\n      <div class=\"modal-body\">\n        <table class=\"table\">\n          <tr>\n            <th scope = \"row\">Project Name</th>\n            <td><input type = \"text\" class = \"form-control\" /></td>\n          </tr>\n          <tr>\n            <th scope = \"row\">Rewarded points:</th>\n            <td><input type = \"number\" class = \"form-control\" /></td>\n          </tr>\n          <tr>\n            <th scope = \"row\">Project due:</th>\n            <td><input type = \"date\" class = \"form-control\" /></td>\n          </tr>\n          <tr>\n            <th scope = \"row\">Add assignees:</th>\n            <td><input type = \"text\" class = \"form-control\" /></td>\n          </tr>\n        </table>\n        <button class = \"btn new-project-btn\" data-dismiss=\"modal\">Assign project</button>\n      </div>\n    \n\n    </div>\n    <h5>Click anywhere to cancel</h5>\n  </div>\n</div> -->\n        <div id=\"bg\">\n            <div class=\"container\">\n                <div class=\"row justify-content-between\">\n                    <h1 class=\"col-xl-4\">{{currentMonth()}} Summary</h1>\n                    <div class=\"card task-info col-2\">\n                        <div class=\"card-body\">\n                            <h5 class=\"card-title\">Total No. of Task(s)</h5>\n                            <h4 class=\"card-text pt-2\">59</h4>\n                        </div>\n                    </div>   \n                    <div class=\"card task-info col-2\">\n                        <div class=\"card-body\">\n                            <h5 class=\"card-title\">No. of Completed Task(s)</h5>\n                            <h4 class=\"card-text pt-2\">25</h4>\n                        </div>\n                    </div>  \n                    <div class=\"card task-info col-2\">\n                        <div class=\"card-body\">\n                            <h5 class=\"card-title\">No. of Incomplete Task(s)</h5>\n                            <h4 class=\"card-text pt-2\">32</h4>\n                        </div>\n                    </div>  \n                </div>\n                <div class=\"row p-2 my-4 bg-white border border-dark\">\n                    <div class=\"row mx-0 p-0 justify-content-between\">\n                        <highcharts :options=\"taskStatus_employer\" class=\"chart col border border-dark\"></highcharts>\n                        <highcharts :options=\"revenue\" class=\"chart col border border-dark\"></highcharts>\n                    </div>\n                    <div class=\"row mx-0 p-0 justify-content-between\">\n                        <highcharts :options=\"taskDist_employer\" class=\"chart col-5 border border-dark\"></highcharts>\n                        <div class=\"task_list col border border-dark\">\n                            <h5 class=\"border-bottom border-dark py-3\">Project Task List</h5><input type=\"text\" placeholder=\"Filter by task/status/person\" class=\"w-100\" v-model=\"filter\" />\n                            <table class=\"table table-hover\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">Task Status <button class=\"button\" @click=\"sortTable('status', direction)\"><img src=\"../assets/sort.png\"></button></th>\n                                        <th scope=\"col\">Task Name <button class=\"button\" @click=\"sortTable('task', direction)\"><img src=\"../assets/sort.png\"></button></th>\n                                        <th scope=\"col\">Project Name <button class=\"button\" @click=\"sortTable('proj', direction)\"><img src=\"../assets/sort.png\"></button></th>\n                                        <th scope=\"col\">Person In-charge <button class=\"button\" @click=\"sortTable('person', direction)\"><img src=\"../assets/sort.png\"></button></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr v-for=\"(row, index) in filteredRows\" :key=\"`task-${index}`\">\n                                        <td>{{ row.status }}</td>\n                                        <td>{{ row.task }}</td>\n                                        <td>{{ row.proj }}</td>\n                                        <td>{{ row.person }}</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n  </div>\n  <!-- <div v-else>\n        <div id=\"bg\">\n            <div class=\"container\">\n                <div class=\"row justify-content-between\">\n                    <h1 class=\"col-xl-4\">{{currentMonth()}} Summary</h1>\n                    <div class=\"card task-info col-2\">\n                        <div class=\"card-body\">\n                            <h5 class=\"card-title\">Total No. of Task(s)</h5>\n                            <h4 class=\"card-text pt-2\">10</h4>\n                        </div>\n                    </div>   \n                    <div class=\"card task-info col-2\">\n                        <div class=\"card-body\">\n                            <h5 class=\"card-title\">No. of Completed Task(s)</h5>\n                            <h4 class=\"card-text pt-2\">2</h4>\n                        </div>\n                    </div>  \n                    <div class=\"card task-info col-2\">\n                        <div class=\"card-body\">\n                            <h5 class=\"card-title\">No. of Incomplete Task(s)</h5>\n                            <h4 class=\"card-text pt-2\">8</h4>\n                        </div>\n                    </div>  \n                </div>\n                <div class=\"row p-2 my-4 bg-white border border-dark\">\n                    <div class=\"row mx-0 p-0 justify-content-between\">\n                        <highcharts :options=\"taskStatus\" class=\"chart col border border-dark\"></highcharts>\n                        <highcharts :options=\"rewardHist\" class=\"chart col border border-dark\"></highcharts>\n                    </div>\n                    <div class=\"row mx-0 p-0 justify-content-between\">\n                        <highcharts :options=\"taskDist\" class=\"chart col-5 border border-dark\"></highcharts>\n                        <div class=\"task_list col border border-dark\">\n                            <h5 class=\"border-bottom border-dark py-3\">Project Task List</h5>\n                            <table class=\"table table-hover\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">Task Status</th>\n                                        <th scope=\"col\">Task Name</th>\n                                        <th scope=\"col\">Project Name</th>\n                                        <th scope=\"col\">Deadline</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr v-for=\"(row, index) in filteredRows\" :key=\"`task-${index}`\">\n                                        <td>{{ row.status }}</td>\n                                        <td>{{ row.task }}</td>\n                                        <td>{{ row.proj }}</td>\n                                        <td>{{ row.deadline }}</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n  </div> -->\n</div>\n<div v-else>\n<h3>You are not logged in.</h3>\n</div>\n\n<!-- </div> -->\n    \n</template>\n<script>\n// import { onBeforeMount } from '@vue/runtime-core'\nimport {Chart} from 'highcharts-vue'\nimport Navbar from \"./Navbar.vue\"\nimport mixin from \"../mixin\"\n// import EmployerProject from \"./EmployerProject.vue\"\n// import AddItem from \"./AddItem.vue\"\n\nexport default {\n    name:\"Home\",\n    mixins:[mixin],\n      components: {\n    Navbar,\n    // EmployerProject,\n    // AddItem,\n    highcharts: Chart \n  },\n//   props:[\"usertype\"],\n  beforeMount(){\n       this.getUserType()\n        if(this.usertype === \"na\"){\n            this.$router.push(\"/authenticate\")\n        }\n  },\n    methods: {\n        currentMonth() {\n            const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n            const current = new Date();\n            const month = months[current.getMonth()];\n            return month;\n        },\n        sortTable(key,direction) {\n            this.sort = `${key} > ${direction}`\n            if (direction === 'asc') {\n                this.rows.sort((a, b) => a[key] > b[key] ? 1: -1)\n                this.direction = 'desc';\n            } else {\n                this.rows.sort((a, b) => a[key] < b[key] ? 1: -1)\n                this.direction = 'asc';\n            }\n        }\n    },\n\n  \n  data(){\n    return{\n      arr:[],\n            taskStatus: {\n                chart: {\n                    type: 'pie'\n                },\n                title: {\n                    text: 'Task Status'\n                },\n                plotOptions: {\n                    pie: {\n                        innerSize: '70%',\n                        allowPointSelect: true,\n                        cursor: 'pointer',\n                        dataLabels: {\n                            enabled: true,\n                            format: '<b>{point.name}</b>: {y}'\n                        }\n                    }\n                },\n                series: [{\n                    name: 'Count',\n                    data: [{\n                        name: 'Completed Task(s)',\n                        y: 2,\n                        color: \"#1b3e6e\"\n                    }, {\n                        name: 'Incomplete Task(s)',\n                        y: 8,\n                        color: \"#6c9fe6\"\n                    }]\n                }]\n            },\n            rewardHist: {\n                chart: {\n                    type: 'line'\n                },\n                title: {\n                    text: 'Points Reward History'\n                },\n                xAxis: {\n                    categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep']\n                },\n                series: [{\n                    name: \"Points Per Month\",\n                    data: [20, 10, 15, 7, 10, 16, 10, 14, 8]\n                }],\n            },\n            taskDist: {\n                chart: {\n                    type: 'column'\n                },\n                title: {\n                    text: 'Task Distribution'\n                },\n                xAxis: {\n                    categories: ['Project 1', 'Project 2', 'Project 3', 'Project 4']\n                },\n                yAxis: {\n                    min: 0,\n                    title: {\n                        text: 'Total No. of Tasks'\n                    },\n                    stackLabels: {\n                        enabled: true,\n                        \n                    }\n                },\n                tooltip: {\n                    headerFormat: '<b>{point.x}</b><br/>',\n                    pointFormat: '{series.name}: {point.y}'\n                },\n                plotOptions: {\n                    column: {\n                        stacking: 'normal',\n                    }\n                },\n                series: [{\n                    name: 'Completed',\n                    data: [0, 1, 1, 0],\n                    color: \"#1b3e6e\"\n                }, {\n                    name: 'Incomplete',\n                    data: [3, 3, 1, 1],\n                    color: \"#6c9fe6\"\n                }]\n            },\n            taskStatus_employer: {\n                chart: {\n                    type: 'pie'\n                },\n                title: {\n                    text: 'Task Status'\n                },\n                plotOptions: {\n                    pie: {\n                        innerSize: '70%',\n                        allowPointSelect: true,\n                        cursor: 'pointer',\n                        dataLabels: {\n                            enabled: true,\n                            format: '<b>{point.name}</b>: {y}'\n                        }\n                    }\n                },\n                series: [{\n                    name: 'Count',\n                    data: [{\n                        name: 'Completed Task(s)',\n                        y: 25,\n                        color: \"#1b3e6e\"\n                    }, {\n                        name: 'Incomplete Task(s)',\n                        y: 32,\n                        color: \"#6c9fe6\"\n                    }]\n                }]\n            },\n            taskDist_employer: {\n                chart: {\n                    type: 'column'\n                },\n                title: {\n                    text: 'Task Distribution'\n                },\n                xAxis: {\n                    categories: ['Project 1', 'Project 2', 'Project 3', 'Project 4', 'Project 5', 'Project 6']\n                },\n                yAxis: {\n                    min: 0,\n                    title: {\n                        text: 'Total No. of Tasks'\n                    },\n                    stackLabels: {\n                        enabled: true,\n                        \n                    }\n                },\n                tooltip: {\n                    headerFormat: '<b>{point.x}</b><br/>',\n                    pointFormat: '{series.name}: {point.y}'\n                },\n                plotOptions: {\n                    column: {\n                        stacking: 'normal',\n                    }\n                },\n                series: [{\n                    name: 'Completed',\n                    data: [10, 4, 2, 7, 2,0],\n                    color: \"#1b3e6e\"\n                }, {\n                    name: 'Incomplete',\n                    data: [3, 5, 10, 2, 2, 10],\n                    color: \"#6c9fe6\"\n                }]\n            },\n            revenue: {\n                chart: {\n                    type: 'line'\n                },\n                title: {\n                    text: 'Revenue Growth'\n                },\n                xAxis: {\n                    categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep']\n                },\n                series: [{\n                    name: \"Profits Per Month\",\n                    data: [20000, 40000, 50000, 70000, 100000, 160000, 100000, 99000, 110000]\n                }],\n            },\n            filter: '',\n            sort: '',\n            direction: 'asc',\n            columns: ['task','proj','status','person'],\n            rows: [\n                {task:'Complete UI', proj: 'Project 5', status: 'Completed', person: 'James', deadline: '28/11/2021'},\n                {task:'Prototype', proj: 'Project 1', status: 'New', person: 'James', deadline: '28/11/2021'},\n                {task:'Draft Proposal', proj: 'Project 2', status: 'In Progress', person: 'James', deadline: '28/11/2021'},\n                {task:'Setup Database', proj: 'Project 2', status: 'In Progress', person: 'John', deadline: '20/11/2021'},\n                {task:'Draft Proposal', proj: 'Project 1', status: 'New', person: 'Kelly', deadline: '2/11/2021'},\n                {task:'UI Testing', proj: 'Project 1',status: 'Completed', person: 'Den', deadline: '10/11/2021'}\n            ]\n    }\n  },\n  computed: {\n        filteredRows() {\n                return this.rows.filter(row => {\n                const task = row.task.toString().toLowerCase();\n                const status = row.status.toLowerCase();\n                const person = row.person.toLowerCase();\n                const searchTerm = this.filter.toLowerCase();\n\n                return task.includes(searchTerm) || status.includes(searchTerm) || person.includes(searchTerm);\n            });\n        }\n  }\n\n}\n</script>\n<style>\n.page{\n    min-height: 100vh;\n    width:100%;\n    /* display: flex; */\n}\n.pageContent{\n  min-height:100vh;\n  /* margin-top:60px; */\n  background:rgba(248, 248, 248, 1)\n;\n  padding-top:60px;\n  padding-bottom:60px;\n}\n</style>\n<style scoped>\n.employer-projects{\n      display: flex;\n    flex-wrap: wrap;\n}\n\n\n.new-project-btn{\nbackground: linear-gradient(0deg, #504DFF, #504DFF), rgba(78, 74, 255, 0.61);\nborder-radius: 5px;\ncolor: white;\n}\n.modal-title{\n  margin: auto;\n}\n.modal-dialog h5{\n  color:white;\n}\n\n/* employee homepage aka dashboard */\n\n    .container {\n        margin-top: 80px;\n    }\n\n    h1 {\n        text-align: left;\n        padding-top: 25px;\n    }\n\n    .task-info {\n        height: 100px;\n        width: 270px;\n        background: linear-gradient(57.11deg, #6D9DF8 -4.9%, #6461FF 101.23%, rgba(109, 157, 248, 0.64) 101.24%, rgba(109, 157, 248, 0) 101.24%);        color:white;\n    }\n\n    .card-body {\n        padding: 10px 0px;\n    }\n\n    .chart {\n        padding: 0px;\n        margin: 5px;\n    }\n\n    .task_list {\n        margin: 5px;\n        height: 400px;\n    }\n\n    img {\n        width: 20px;\n    }\n\n    .button {\n        border: none;\n        background-color: transparent;\n    }\n\n    .my-custom-scrollbar {\n    position: relative;\n    height: 300px;\n    overflow: auto;\n    }\n\n    .table-wrapper-scroll-y {\n    display: block;\n    }\n\n\n</style>"]}]}